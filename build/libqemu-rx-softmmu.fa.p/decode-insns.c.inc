/* This file is autogenerated by scripts/decodetree.py.  */

typedef struct {
    int cd;
    int dsp;
    int sz;
} arg_bcnd;

typedef struct {
    int imm;
    int ld;
    int rs;
} arg_decode11;

typedef struct {
    int cd;
    int imm;
    int ld;
    int rd;
} arg_decode12;

typedef struct {
    int cd;
    int imm;
    int rd;
} arg_decode13;

typedef struct {
    int rd;
} arg_decode14;

typedef struct {
} arg_decode15;

typedef struct {
    int cb;
} arg_decode16;

typedef struct {
    int imm;
} arg_decode17;

typedef struct {
    int rs;
    int rs2;
} arg_decode18;

typedef struct {
    int dsp;
    int rd;
    int rs;
    int sz;
} arg_decode19;

typedef struct {
    int dsp;
    int imm;
    int rd;
    int sz;
} arg_decode20;

typedef struct {
    int rb;
    int rd;
    int ri;
    int sz;
} arg_decode21;

typedef struct {
    int rb;
    int ri;
    int rs;
    int sz;
} arg_decode22;

typedef struct {
    int ldd;
    int lds;
    int rd;
    int rs;
    int sz;
} arg_decode23;

typedef struct {
    int ad;
    int rd;
    int rs;
    int sz;
} arg_decode24;

typedef struct {
    int rd;
    int rs;
    int sz;
} arg_decode25;

typedef struct {
    int cr;
    int rd;
} arg_decode26;

typedef struct {
    int cr;
    int imm;
} arg_decode27;

typedef struct {
    int cr;
    int rs;
} arg_decode28;

typedef struct {
    int cr;
} arg_decode29;

typedef struct {
    int rd;
    int rd2;
} arg_decode30;

typedef struct {
    int rs;
    int sz;
} arg_decode31;

typedef struct {
    int ld;
    int rs;
    int sz;
} arg_decode32;

typedef struct {
    int sz;
} arg_decode33;

typedef struct {
    int imm;
    int rd;
    int rd2;
} arg_decode34;

typedef struct {
    int dsp;
    int sz;
} arg_jdsp;

typedef struct {
    int rs;
} arg_jreg;

typedef struct {
    int cd;
    int ld;
    int rd;
    int sz;
} arg_mcnd;

typedef struct {
    int imm;
    int ld;
    int mi;
    int rs;
} arg_mi;

typedef struct {
    int ld;
    int mi;
    int rs;
    int rs2;
} arg_mr;

typedef struct {
    int imm;
    int rd;
} arg_ri;

typedef struct {
    int ld;
    int mi;
    int rd;
    int rs;
} arg_rm;

typedef struct {
    int rd;
    int rs;
} arg_rr;

typedef struct {
    int imm;
    int rd;
    int rs2;
} arg_rri;

typedef struct {
    int rd;
    int rs;
    int rs2;
} arg_rrr;

typedef arg_rr arg_ABS_rr;
static bool trans_ABS_rr(DisasContext *ctx, arg_ABS_rr *a);
typedef arg_rri arg_ADC_ir;
static bool trans_ADC_ir(DisasContext *ctx, arg_ADC_ir *a);
typedef arg_rr arg_ADC_rr;
static bool trans_ADC_rr(DisasContext *ctx, arg_ADC_rr *a);
typedef arg_rm arg_ADC_mr;
static bool trans_ADC_mr(DisasContext *ctx, arg_ADC_mr *a);
typedef arg_rri arg_ADD_irr;
static bool trans_ADD_irr(DisasContext *ctx, arg_ADD_irr *a);
typedef arg_rm arg_ADD_mr;
static bool trans_ADD_mr(DisasContext *ctx, arg_ADD_mr *a);
typedef arg_rrr arg_ADD_rrr;
static bool trans_ADD_rrr(DisasContext *ctx, arg_ADD_rrr *a);
typedef arg_rri arg_AND_ir;
static bool trans_AND_ir(DisasContext *ctx, arg_AND_ir *a);
typedef arg_rm arg_AND_mr;
static bool trans_AND_mr(DisasContext *ctx, arg_AND_mr *a);
typedef arg_rrr arg_AND_rrr;
static bool trans_AND_rrr(DisasContext *ctx, arg_AND_rrr *a);
typedef arg_mi arg_BCLR_im;
static bool trans_BCLR_im(DisasContext *ctx, arg_BCLR_im *a);
typedef arg_rri arg_BCLR_ir;
static bool trans_BCLR_ir(DisasContext *ctx, arg_BCLR_ir *a);
typedef arg_rr arg_BCLR_rr;
static bool trans_BCLR_rr(DisasContext *ctx, arg_BCLR_rr *a);
typedef arg_rm arg_BCLR_rm;
static bool trans_BCLR_rm(DisasContext *ctx, arg_BCLR_rm *a);
typedef arg_bcnd arg_BCnd;
static bool trans_BCnd(DisasContext *ctx, arg_BCnd *a);
typedef arg_jdsp arg_BRA;
static bool trans_BRA(DisasContext *ctx, arg_BRA *a);
typedef arg_decode11 arg_BNOT_im;
static bool trans_BNOT_im(DisasContext *ctx, arg_BNOT_im *a);
typedef arg_decode12 arg_BMCnd_im;
static bool trans_BMCnd_im(DisasContext *ctx, arg_BMCnd_im *a);
typedef arg_ri arg_BNOT_ir;
static bool trans_BNOT_ir(DisasContext *ctx, arg_BNOT_ir *a);
typedef arg_decode13 arg_BMCnd_ir;
static bool trans_BMCnd_ir(DisasContext *ctx, arg_BMCnd_ir *a);
typedef arg_rr arg_BNOT_rr;
static bool trans_BNOT_rr(DisasContext *ctx, arg_BNOT_rr *a);
typedef arg_rm arg_BNOT_rm;
static bool trans_BNOT_rm(DisasContext *ctx, arg_BNOT_rm *a);
typedef arg_decode14 arg_BRA_l;
static bool trans_BRA_l(DisasContext *ctx, arg_BRA_l *a);
typedef arg_decode15 arg_BRK;
static bool trans_BRK(DisasContext *ctx, arg_BRK *a);
typedef arg_mi arg_BSET_im;
static bool trans_BSET_im(DisasContext *ctx, arg_BSET_im *a);
typedef arg_rri arg_BSET_ir;
static bool trans_BSET_ir(DisasContext *ctx, arg_BSET_ir *a);
typedef arg_rr arg_BSET_rr;
static bool trans_BSET_rr(DisasContext *ctx, arg_BSET_rr *a);
typedef arg_rm arg_BSET_rm;
static bool trans_BSET_rm(DisasContext *ctx, arg_BSET_rm *a);
typedef arg_jdsp arg_BSR;
static bool trans_BSR(DisasContext *ctx, arg_BSR *a);
typedef arg_decode14 arg_BSR_l;
static bool trans_BSR_l(DisasContext *ctx, arg_BSR_l *a);
typedef arg_mi arg_BTST_im;
static bool trans_BTST_im(DisasContext *ctx, arg_BTST_im *a);
typedef arg_rri arg_BTST_ir;
static bool trans_BTST_ir(DisasContext *ctx, arg_BTST_ir *a);
typedef arg_rr arg_BTST_rr;
static bool trans_BTST_rr(DisasContext *ctx, arg_BTST_rr *a);
typedef arg_rm arg_BTST_rm;
static bool trans_BTST_rm(DisasContext *ctx, arg_BTST_rm *a);
typedef arg_decode16 arg_CLRPSW;
static bool trans_CLRPSW(DisasContext *ctx, arg_CLRPSW *a);
typedef arg_rri arg_CMP_ir;
static bool trans_CMP_ir(DisasContext *ctx, arg_CMP_ir *a);
typedef arg_rm arg_CMP_mr;
static bool trans_CMP_mr(DisasContext *ctx, arg_CMP_mr *a);
typedef arg_rri arg_DIV_ir;
static bool trans_DIV_ir(DisasContext *ctx, arg_DIV_ir *a);
typedef arg_rm arg_DIV_mr;
static bool trans_DIV_mr(DisasContext *ctx, arg_DIV_mr *a);
typedef arg_rri arg_DIVU_ir;
static bool trans_DIVU_ir(DisasContext *ctx, arg_DIVU_ir *a);
typedef arg_rm arg_DIVU_mr;
static bool trans_DIVU_mr(DisasContext *ctx, arg_DIVU_mr *a);
typedef arg_rri arg_EMUL_ir;
static bool trans_EMUL_ir(DisasContext *ctx, arg_EMUL_ir *a);
typedef arg_rm arg_EMUL_mr;
static bool trans_EMUL_mr(DisasContext *ctx, arg_EMUL_mr *a);
typedef arg_rri arg_EMULU_ir;
static bool trans_EMULU_ir(DisasContext *ctx, arg_EMULU_ir *a);
typedef arg_rm arg_EMULU_mr;
static bool trans_EMULU_mr(DisasContext *ctx, arg_EMULU_mr *a);
typedef arg_decode14 arg_FADD_ir;
static bool trans_FADD_ir(DisasContext *ctx, arg_FADD_ir *a);
typedef arg_rm arg_FADD_mr;
static bool trans_FADD_mr(DisasContext *ctx, arg_FADD_mr *a);
typedef arg_decode14 arg_FCMP_ir;
static bool trans_FCMP_ir(DisasContext *ctx, arg_FCMP_ir *a);
typedef arg_rm arg_FCMP_mr;
static bool trans_FCMP_mr(DisasContext *ctx, arg_FCMP_mr *a);
typedef arg_decode14 arg_FDIV_ir;
static bool trans_FDIV_ir(DisasContext *ctx, arg_FDIV_ir *a);
typedef arg_rm arg_FDIV_mr;
static bool trans_FDIV_mr(DisasContext *ctx, arg_FDIV_mr *a);
typedef arg_decode14 arg_FMUL_ir;
static bool trans_FMUL_ir(DisasContext *ctx, arg_FMUL_ir *a);
typedef arg_rm arg_FMUL_mr;
static bool trans_FMUL_mr(DisasContext *ctx, arg_FMUL_mr *a);
typedef arg_decode14 arg_FSUB_ir;
static bool trans_FSUB_ir(DisasContext *ctx, arg_FSUB_ir *a);
typedef arg_rm arg_FSUB_mr;
static bool trans_FSUB_mr(DisasContext *ctx, arg_FSUB_mr *a);
typedef arg_rm arg_FTOI;
static bool trans_FTOI(DisasContext *ctx, arg_FTOI *a);
typedef arg_decode17 arg_INT;
static bool trans_INT(DisasContext *ctx, arg_INT *a);
typedef arg_rm arg_ITOF;
static bool trans_ITOF(DisasContext *ctx, arg_ITOF *a);
typedef arg_jreg arg_JMP;
static bool trans_JMP(DisasContext *ctx, arg_JMP *a);
typedef arg_jreg arg_JSR;
static bool trans_JSR(DisasContext *ctx, arg_JSR *a);
typedef arg_decode18 arg_MACHI;
static bool trans_MACHI(DisasContext *ctx, arg_MACHI *a);
typedef arg_decode18 arg_MACLO;
static bool trans_MACLO(DisasContext *ctx, arg_MACLO *a);
typedef arg_rri arg_MAX_ir;
static bool trans_MAX_ir(DisasContext *ctx, arg_MAX_ir *a);
typedef arg_rm arg_MAX_mr;
static bool trans_MAX_mr(DisasContext *ctx, arg_MAX_mr *a);
typedef arg_rri arg_MIN_ir;
static bool trans_MIN_ir(DisasContext *ctx, arg_MIN_ir *a);
typedef arg_rm arg_MIN_mr;
static bool trans_MIN_mr(DisasContext *ctx, arg_MIN_mr *a);
typedef arg_decode19 arg_MOV_rm;
static bool trans_MOV_rm(DisasContext *ctx, arg_MOV_rm *a);
typedef arg_decode19 arg_MOV_mr;
static bool trans_MOV_mr(DisasContext *ctx, arg_MOV_mr *a);
typedef arg_ri arg_MOV_ir;
static bool trans_MOV_ir(DisasContext *ctx, arg_MOV_ir *a);
typedef arg_decode20 arg_MOV_im;
static bool trans_MOV_im(DisasContext *ctx, arg_MOV_im *a);
typedef arg_decode21 arg_MOV_ar;
static bool trans_MOV_ar(DisasContext *ctx, arg_MOV_ar *a);
typedef arg_decode22 arg_MOV_ra;
static bool trans_MOV_ra(DisasContext *ctx, arg_MOV_ra *a);
typedef arg_decode23 arg_MOV_mm;
static bool trans_MOV_mm(DisasContext *ctx, arg_MOV_mm *a);
typedef arg_decode24 arg_MOV_rp;
static bool trans_MOV_rp(DisasContext *ctx, arg_MOV_rp *a);
typedef arg_decode24 arg_MOV_pr;
static bool trans_MOV_pr(DisasContext *ctx, arg_MOV_pr *a);
typedef arg_decode19 arg_MOVU_mr;
static bool trans_MOVU_mr(DisasContext *ctx, arg_MOVU_mr *a);
typedef arg_decode25 arg_MOVU_rr;
static bool trans_MOVU_rr(DisasContext *ctx, arg_MOVU_rr *a);
typedef arg_decode21 arg_MOVU_ar;
static bool trans_MOVU_ar(DisasContext *ctx, arg_MOVU_ar *a);
typedef arg_decode24 arg_MOVU_pr;
static bool trans_MOVU_pr(DisasContext *ctx, arg_MOVU_pr *a);
typedef arg_rri arg_MUL_ir;
static bool trans_MUL_ir(DisasContext *ctx, arg_MUL_ir *a);
typedef arg_rm arg_MUL_mr;
static bool trans_MUL_mr(DisasContext *ctx, arg_MUL_mr *a);
typedef arg_rrr arg_MUL_rrr;
static bool trans_MUL_rrr(DisasContext *ctx, arg_MUL_rrr *a);
typedef arg_decode18 arg_MULHI;
static bool trans_MULHI(DisasContext *ctx, arg_MULHI *a);
typedef arg_decode18 arg_MULLO;
static bool trans_MULLO(DisasContext *ctx, arg_MULLO *a);
typedef arg_decode14 arg_MVFACHI;
static bool trans_MVFACHI(DisasContext *ctx, arg_MVFACHI *a);
typedef arg_decode14 arg_MVFACMI;
static bool trans_MVFACMI(DisasContext *ctx, arg_MVFACMI *a);
typedef arg_decode26 arg_MVFC;
static bool trans_MVFC(DisasContext *ctx, arg_MVFC *a);
typedef arg_jreg arg_MVTACHI;
static bool trans_MVTACHI(DisasContext *ctx, arg_MVTACHI *a);
typedef arg_jreg arg_MVTACLO;
static bool trans_MVTACLO(DisasContext *ctx, arg_MVTACLO *a);
typedef arg_decode27 arg_MVTC_i;
static bool trans_MVTC_i(DisasContext *ctx, arg_MVTC_i *a);
typedef arg_decode28 arg_MVTC_r;
static bool trans_MVTC_r(DisasContext *ctx, arg_MVTC_r *a);
typedef arg_decode17 arg_MVTIPL;
static bool trans_MVTIPL(DisasContext *ctx, arg_MVTIPL *a);
typedef arg_rr arg_NEG_rr;
static bool trans_NEG_rr(DisasContext *ctx, arg_NEG_rr *a);
typedef arg_decode15 arg_NOP;
static bool trans_NOP(DisasContext *ctx, arg_NOP *a);
typedef arg_rr arg_NOT_rr;
static bool trans_NOT_rr(DisasContext *ctx, arg_NOT_rr *a);
typedef arg_rri arg_OR_ir;
static bool trans_OR_ir(DisasContext *ctx, arg_OR_ir *a);
typedef arg_rm arg_OR_mr;
static bool trans_OR_mr(DisasContext *ctx, arg_OR_mr *a);
typedef arg_rrr arg_OR_rrr;
static bool trans_OR_rrr(DisasContext *ctx, arg_OR_rrr *a);
typedef arg_decode29 arg_POPC;
static bool trans_POPC(DisasContext *ctx, arg_POPC *a);
typedef arg_decode30 arg_POPM;
static bool trans_POPM(DisasContext *ctx, arg_POPM *a);
typedef arg_decode14 arg_POP;
static bool trans_POP(DisasContext *ctx, arg_POP *a);
typedef arg_decode31 arg_PUSH_r;
static bool trans_PUSH_r(DisasContext *ctx, arg_PUSH_r *a);
typedef arg_decode32 arg_PUSH_m;
static bool trans_PUSH_m(DisasContext *ctx, arg_PUSH_m *a);
typedef arg_decode29 arg_PUSHC;
static bool trans_PUSHC(DisasContext *ctx, arg_PUSHC *a);
typedef arg_decode18 arg_PUSHM;
static bool trans_PUSHM(DisasContext *ctx, arg_PUSHM *a);
typedef arg_decode17 arg_RACW;
static bool trans_RACW(DisasContext *ctx, arg_RACW *a);
typedef arg_rr arg_REVL;
static bool trans_REVL(DisasContext *ctx, arg_REVL *a);
typedef arg_rr arg_REVW;
static bool trans_REVW(DisasContext *ctx, arg_REVW *a);
typedef arg_decode15 arg_SMOVF;
static bool trans_SMOVF(DisasContext *ctx, arg_SMOVF *a);
typedef arg_decode33 arg_RMPA;
static bool trans_RMPA(DisasContext *ctx, arg_RMPA *a);
typedef arg_rr arg_ROLC;
static bool trans_ROLC(DisasContext *ctx, arg_ROLC *a);
typedef arg_rr arg_RORC;
static bool trans_RORC(DisasContext *ctx, arg_RORC *a);
typedef arg_rri arg_ROTL_ir;
static bool trans_ROTL_ir(DisasContext *ctx, arg_ROTL_ir *a);
typedef arg_rr arg_ROTL_rr;
static bool trans_ROTL_rr(DisasContext *ctx, arg_ROTL_rr *a);
typedef arg_rri arg_ROTR_ir;
static bool trans_ROTR_ir(DisasContext *ctx, arg_ROTR_ir *a);
typedef arg_rr arg_ROTR_rr;
static bool trans_ROTR_rr(DisasContext *ctx, arg_ROTR_rr *a);
typedef arg_rm arg_ROUND;
static bool trans_ROUND(DisasContext *ctx, arg_ROUND *a);
typedef arg_decode15 arg_RTE;
static bool trans_RTE(DisasContext *ctx, arg_RTE *a);
typedef arg_decode15 arg_RTFI;
static bool trans_RTFI(DisasContext *ctx, arg_RTFI *a);
typedef arg_decode15 arg_RTS;
static bool trans_RTS(DisasContext *ctx, arg_RTS *a);
typedef arg_decode17 arg_RTSD_i;
static bool trans_RTSD_i(DisasContext *ctx, arg_RTSD_i *a);
typedef arg_decode34 arg_RTSD_irr;
static bool trans_RTSD_irr(DisasContext *ctx, arg_RTSD_irr *a);
typedef arg_rr arg_SAT;
static bool trans_SAT(DisasContext *ctx, arg_SAT *a);
typedef arg_decode15 arg_SATR;
static bool trans_SATR(DisasContext *ctx, arg_SATR *a);
typedef arg_rr arg_SBB_rr;
static bool trans_SBB_rr(DisasContext *ctx, arg_SBB_rr *a);
typedef arg_rm arg_SBB_mr;
static bool trans_SBB_mr(DisasContext *ctx, arg_SBB_mr *a);
typedef arg_mcnd arg_SCCnd;
static bool trans_SCCnd(DisasContext *ctx, arg_SCCnd *a);
typedef arg_decode16 arg_SETPSW;
static bool trans_SETPSW(DisasContext *ctx, arg_SETPSW *a);
typedef arg_rri arg_SHAR_irr;
static bool trans_SHAR_irr(DisasContext *ctx, arg_SHAR_irr *a);
typedef arg_rr arg_SHAR_rr;
static bool trans_SHAR_rr(DisasContext *ctx, arg_SHAR_rr *a);
typedef arg_rri arg_SHLL_irr;
static bool trans_SHLL_irr(DisasContext *ctx, arg_SHLL_irr *a);
typedef arg_rr arg_SHLL_rr;
static bool trans_SHLL_rr(DisasContext *ctx, arg_SHLL_rr *a);
typedef arg_rri arg_SHLR_irr;
static bool trans_SHLR_irr(DisasContext *ctx, arg_SHLR_irr *a);
typedef arg_rr arg_SHLR_rr;
static bool trans_SHLR_rr(DisasContext *ctx, arg_SHLR_rr *a);
typedef arg_decode15 arg_SMOVB;
static bool trans_SMOVB(DisasContext *ctx, arg_SMOVB *a);
typedef arg_decode33 arg_SSTR;
static bool trans_SSTR(DisasContext *ctx, arg_SSTR *a);
typedef arg_rri arg_STNZ;
static bool trans_STNZ(DisasContext *ctx, arg_STNZ *a);
typedef arg_rri arg_STZ;
static bool trans_STZ(DisasContext *ctx, arg_STZ *a);
typedef arg_rri arg_SUB_ir;
static bool trans_SUB_ir(DisasContext *ctx, arg_SUB_ir *a);
typedef arg_rm arg_SUB_mr;
static bool trans_SUB_mr(DisasContext *ctx, arg_SUB_mr *a);
typedef arg_rrr arg_SUB_rrr;
static bool trans_SUB_rrr(DisasContext *ctx, arg_SUB_rrr *a);
typedef arg_decode15 arg_SCMPU;
static bool trans_SCMPU(DisasContext *ctx, arg_SCMPU *a);
typedef arg_decode33 arg_SUNTIL;
static bool trans_SUNTIL(DisasContext *ctx, arg_SUNTIL *a);
typedef arg_decode15 arg_SMOVU;
static bool trans_SMOVU(DisasContext *ctx, arg_SMOVU *a);
typedef arg_decode33 arg_SWHILE;
static bool trans_SWHILE(DisasContext *ctx, arg_SWHILE *a);
typedef arg_rri arg_TST_ir;
static bool trans_TST_ir(DisasContext *ctx, arg_TST_ir *a);
typedef arg_rm arg_TST_mr;
static bool trans_TST_mr(DisasContext *ctx, arg_TST_mr *a);
typedef arg_decode15 arg_WAIT;
static bool trans_WAIT(DisasContext *ctx, arg_WAIT *a);
typedef arg_rr arg_XCHG_rr;
static bool trans_XCHG_rr(DisasContext *ctx, arg_XCHG_rr *a);
typedef arg_rm arg_XCHG_mr;
static bool trans_XCHG_mr(DisasContext *ctx, arg_XCHG_mr *a);
typedef arg_rri arg_XOR_ir;
static bool trans_XOR_ir(DisasContext *ctx, arg_XOR_ir *a);
typedef arg_rm arg_XOR_mr;
static bool trans_XOR_mr(DisasContext *ctx, arg_XOR_mr *a);

static void decode_extract_b1_bcnd_s(DisasContext *ctx, arg_bcnd *a, uint32_t insn)
{
    a->cd = extract32(insn, 27, 1);
    a->dsp = bdsp_s(ctx, extract32(insn, 24, 3));
    a->sz = 1;
}

static void decode_extract_b1_bra_s(DisasContext *ctx, arg_jdsp *a, uint32_t insn)
{
    a->dsp = bdsp_s(ctx, extract32(insn, 24, 3));
    a->sz = 1;
}

static void decode_extract_b2_bcnd_b(DisasContext *ctx, arg_bcnd *a, uint32_t insn)
{
    a->cd = extract32(insn, 24, 4);
    a->dsp = sextract32(insn, 16, 8);
    a->sz = 2;
}

static void decode_extract_b2_bra_b(DisasContext *ctx, arg_jdsp *a, uint32_t insn)
{
    a->dsp = sextract32(insn, 16, 8);
    a->sz = 2;
}

static void decode_extract_b2_ld_imm3(DisasContext *ctx, arg_mi *a, uint32_t insn)
{
    a->ld = extract32(insn, 24, 2);
    a->rs = extract32(insn, 20, 4);
    a->imm = extract32(insn, 16, 3);
    a->mi = 4;
}

static void decode_extract_b2_rd_ld_ub(DisasContext *ctx, arg_rm *a, uint32_t insn)
{
    a->ld = extract32(insn, 24, 2);
    a->rs = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
    a->mi = 4;
}

static void decode_extract_b2_rd_rs_li(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->rs2 = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
    a->imm = li(ctx, extract32(insn, 24, 2));
}

static void decode_extract_b2_rds(DisasContext *ctx, arg_rr *a, uint32_t insn)
{
    a->rd = extract32(insn, 16, 4);
    a->rs = extract32(insn, 16, 4);
}

static void decode_extract_b2_rds_imm5(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->imm = extract32(insn, 20, 5);
    a->rd = extract32(insn, 16, 4);
    a->rs2 = extract32(insn, 16, 4);
}

static void decode_extract_b2_rds_li(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->rd = extract32(insn, 16, 4);
    a->rs2 = extract32(insn, 16, 4);
    a->imm = li(ctx, extract32(insn, 24, 2));
}

static void decode_extract_b2_rds_uimm4(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->imm = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
    a->rs2 = extract32(insn, 16, 4);
}

static void decode_extract_b2_rs2_uimm4(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->imm = extract32(insn, 20, 4);
    a->rs2 = extract32(insn, 16, 4);
    a->rd = 0;
}

static void decode_extract_b3_bcnd_w(DisasContext *ctx, arg_bcnd *a, uint32_t insn)
{
    a->cd = extract32(insn, 24, 1);
    a->dsp = deposit32(extract32(insn, 16, 8), 8, 24, sextract32(insn, 8, 8));
    a->sz = 3;
}

static void decode_extract_b3_bra_w(DisasContext *ctx, arg_jdsp *a, uint32_t insn)
{
    a->dsp = deposit32(extract32(insn, 16, 8), 8, 24, sextract32(insn, 8, 8));
    a->sz = 3;
}

static void decode_extract_b3_ld_rd_rs(DisasContext *ctx, arg_rm *a, uint32_t insn)
{
    a->ld = extract32(insn, 16, 2);
    a->rs = extract32(insn, 12, 4);
    a->rd = extract32(insn, 8, 4);
    a->mi = 0;
}

static void decode_extract_b3_rd_ld(DisasContext *ctx, arg_rm *a, uint32_t insn)
{
    a->mi = extract32(insn, 22, 2);
    a->ld = extract32(insn, 16, 2);
    a->rs = extract32(insn, 12, 4);
    a->rd = extract32(insn, 8, 4);
}

static void decode_extract_b3_rd_ld_ub(DisasContext *ctx, arg_rm *a, uint32_t insn)
{
    a->ld = extract32(insn, 16, 2);
    a->rs = extract32(insn, 12, 4);
    a->rd = extract32(insn, 8, 4);
    a->mi = 4;
}

static void decode_extract_b3_rd_ld_ul(DisasContext *ctx, arg_rm *a, uint32_t insn)
{
    a->ld = extract32(insn, 16, 2);
    a->rs = extract32(insn, 12, 4);
    a->rd = extract32(insn, 8, 4);
    a->mi = 2;
}

static void decode_extract_b3_rd_li(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->rd = extract32(insn, 8, 4);
    a->rs2 = extract32(insn, 8, 4);
    a->imm = li(ctx, extract32(insn, 18, 2));
}

static void decode_extract_b3_rd_rs(DisasContext *ctx, arg_rr *a, uint32_t insn)
{
    a->rs = extract32(insn, 12, 4);
    a->rd = extract32(insn, 8, 4);
}

static void decode_extract_b3_rd_rs_imm5(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->imm = extract32(insn, 16, 5);
    a->rs2 = extract32(insn, 12, 4);
    a->rd = extract32(insn, 8, 4);
}

static void decode_extract_b3_rd_rs_rs2(DisasContext *ctx, arg_rrr *a, uint32_t insn)
{
    a->rd = extract32(insn, 16, 4);
    a->rs = extract32(insn, 12, 4);
    a->rs2 = extract32(insn, 8, 4);
}

static void decode_extract_b3_rds_imm5(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->imm = extract32(insn, 12, 5);
    a->rd = extract32(insn, 8, 4);
    a->rs2 = extract32(insn, 8, 4);
}

static void decode_extract_b3_rs_rd(DisasContext *ctx, arg_rr *a, uint32_t insn)
{
    a->rd = extract32(insn, 12, 4);
    a->rs = extract32(insn, 8, 4);
}

static void decode_extract_b3_sz_ld_rd_cd(DisasContext *ctx, arg_mcnd *a, uint32_t insn)
{
    a->sz = extract32(insn, 18, 2);
    a->ld = extract32(insn, 16, 2);
    a->rd = extract32(insn, 12, 4);
    a->cd = extract32(insn, 8, 4);
}

static void decode_extract_b4_bra_a(DisasContext *ctx, arg_jdsp *a, uint32_t insn)
{
    a->dsp = deposit32(deposit32(extract32(insn, 16, 8), 8, 24, extract32(insn, 8, 8)), 16, 16, sextract32(insn, 0, 8));
    a->sz = 4;
}

static void decode_extract_b4_rd_ldmi(DisasContext *ctx, arg_rm *a, uint32_t insn)
{
    a->mi = extract32(insn, 22, 2);
    a->ld = extract32(insn, 16, 2);
    a->rs = extract32(insn, 4, 4);
    a->rd = extract32(insn, 0, 4);
}

static void decode_extract_decode_Fmt_27(DisasContext *ctx, arg_decode11 *a, uint32_t insn)
{
    a->imm = extract32(insn, 18, 3);
    a->ld = extract32(insn, 16, 2);
    a->rs = extract32(insn, 12, 4);
}

static void decode_extract_decode_Fmt_28(DisasContext *ctx, arg_decode12 *a, uint32_t insn)
{
    a->imm = extract32(insn, 18, 3);
    a->ld = extract32(insn, 16, 2);
    a->rd = extract32(insn, 12, 4);
    a->cd = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_29(DisasContext *ctx, arg_ri *a, uint32_t insn)
{
    a->imm = extract32(insn, 16, 5);
    a->rd = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_30(DisasContext *ctx, arg_decode13 *a, uint32_t insn)
{
    a->imm = extract32(insn, 16, 5);
    a->cd = extract32(insn, 12, 4);
    a->rd = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_31(DisasContext *ctx, arg_decode14 *a, uint32_t insn)
{
    a->rd = extract32(insn, 16, 4);
}

static void decode_extract_decode_Fmt_32(DisasContext *ctx, arg_decode15 *a, uint32_t insn)
{
}

static void decode_extract_decode_Fmt_33(DisasContext *ctx, arg_decode16 *a, uint32_t insn)
{
    a->cb = extract32(insn, 16, 4);
}

static void decode_extract_decode_Fmt_34(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->rs2 = extract32(insn, 16, 4);
    a->imm = extract32(insn, 8, 8);
    a->rd = 0;
}

static void decode_extract_decode_Fmt_35(DisasContext *ctx, arg_rri *a, uint32_t insn)
{
    a->rs2 = extract32(insn, 16, 4);
    a->imm = li(ctx, extract32(insn, 24, 2));
    a->rd = 0;
}

static void decode_extract_decode_Fmt_36(DisasContext *ctx, arg_decode14 *a, uint32_t insn)
{
    a->rd = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_37(DisasContext *ctx, arg_decode17 *a, uint32_t insn)
{
    a->imm = extract32(insn, 8, 8);
}

static void decode_extract_decode_Fmt_38(DisasContext *ctx, arg_jreg *a, uint32_t insn)
{
    a->rs = extract32(insn, 16, 4);
}

static void decode_extract_decode_Fmt_39(DisasContext *ctx, arg_decode18 *a, uint32_t insn)
{
    a->rs = extract32(insn, 12, 4);
    a->rs2 = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_40(DisasContext *ctx, arg_decode19 *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 3);
    a->rs = extract32(insn, 16, 3);
    a->dsp = deposit32(extract32(insn, 19, 1), 1, 31, extract32(insn, 23, 4));
    a->sz = 0;
}

static void decode_extract_decode_Fmt_41(DisasContext *ctx, arg_decode19 *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 3);
    a->rs = extract32(insn, 16, 3);
    a->dsp = deposit32(extract32(insn, 19, 1), 1, 31, extract32(insn, 23, 4));
    a->sz = 1;
}

static void decode_extract_decode_Fmt_42(DisasContext *ctx, arg_decode19 *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 3);
    a->rs = extract32(insn, 16, 3);
    a->dsp = deposit32(extract32(insn, 19, 1), 1, 31, extract32(insn, 23, 4));
    a->sz = 2;
}

static void decode_extract_decode_Fmt_43(DisasContext *ctx, arg_decode19 *a, uint32_t insn)
{
    a->rs = extract32(insn, 20, 3);
    a->rd = extract32(insn, 16, 3);
    a->dsp = deposit32(extract32(insn, 19, 1), 1, 31, extract32(insn, 23, 4));
    a->sz = 0;
}

static void decode_extract_decode_Fmt_44(DisasContext *ctx, arg_decode19 *a, uint32_t insn)
{
    a->rs = extract32(insn, 20, 3);
    a->rd = extract32(insn, 16, 3);
    a->dsp = deposit32(extract32(insn, 19, 1), 1, 31, extract32(insn, 23, 4));
    a->sz = 1;
}

static void decode_extract_decode_Fmt_45(DisasContext *ctx, arg_decode19 *a, uint32_t insn)
{
    a->rs = extract32(insn, 20, 3);
    a->rd = extract32(insn, 16, 3);
    a->dsp = deposit32(extract32(insn, 19, 1), 1, 31, extract32(insn, 23, 4));
    a->sz = 2;
}

static void decode_extract_decode_Fmt_46(DisasContext *ctx, arg_ri *a, uint32_t insn)
{
    a->imm = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
}

static void decode_extract_decode_Fmt_47(DisasContext *ctx, arg_decode20 *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 3);
    a->imm = extract32(insn, 8, 8);
    a->sz = 0;
    a->dsp = deposit32(extract32(insn, 16, 4), 4, 28, extract32(insn, 23, 1));
}

static void decode_extract_decode_Fmt_48(DisasContext *ctx, arg_decode20 *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 3);
    a->imm = extract32(insn, 8, 8);
    a->sz = 1;
    a->dsp = deposit32(extract32(insn, 16, 4), 4, 28, extract32(insn, 23, 1));
}

static void decode_extract_decode_Fmt_49(DisasContext *ctx, arg_decode20 *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 3);
    a->imm = extract32(insn, 8, 8);
    a->sz = 2;
    a->dsp = deposit32(extract32(insn, 16, 4), 4, 28, extract32(insn, 23, 1));
}

static void decode_extract_decode_Fmt_50(DisasContext *ctx, arg_ri *a, uint32_t insn)
{
    a->rd = extract32(insn, 16, 4);
    a->imm = extract32(insn, 8, 8);
}

static void decode_extract_decode_Fmt_51(DisasContext *ctx, arg_ri *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 4);
    a->imm = li(ctx, extract32(insn, 18, 2));
}

static void decode_extract_decode_Fmt_52(DisasContext *ctx, arg_decode20 *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 4);
    a->sz = extract32(insn, 16, 2);
    a->dsp = 0;
    a->imm = li(ctx, extract32(insn, 18, 2));
}

static void decode_extract_decode_Fmt_53(DisasContext *ctx, arg_decode20 *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 4);
    a->sz = extract32(insn, 16, 2);
    a->dsp = extract32(insn, 8, 8);
    a->imm = li(ctx, extract32(insn, 18, 2));
}

static void decode_extract_decode_Fmt_54(DisasContext *ctx, arg_decode20 *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 4);
    a->sz = extract32(insn, 16, 2);
    a->imm = li(ctx, extract32(insn, 18, 2));
    a->dsp = deposit32(extract32(insn, 8, 8), 8, 24, sextract32(insn, 0, 8));
}

static void decode_extract_decode_Fmt_55(DisasContext *ctx, arg_decode21 *a, uint32_t insn)
{
    a->sz = extract32(insn, 20, 2);
    a->ri = extract32(insn, 16, 4);
    a->rb = extract32(insn, 12, 4);
    a->rd = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_56(DisasContext *ctx, arg_decode22 *a, uint32_t insn)
{
    a->sz = extract32(insn, 20, 2);
    a->ri = extract32(insn, 16, 4);
    a->rb = extract32(insn, 12, 4);
    a->rs = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_57(DisasContext *ctx, arg_decode23 *a, uint32_t insn)
{
    a->ldd = extract32(insn, 26, 2);
    a->lds = extract32(insn, 24, 2);
    a->rs = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
    a->sz = 0;
}

static void decode_extract_decode_Fmt_58(DisasContext *ctx, arg_decode23 *a, uint32_t insn)
{
    a->ldd = extract32(insn, 26, 2);
    a->lds = extract32(insn, 24, 2);
    a->rs = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
    a->sz = 1;
}

static void decode_extract_decode_Fmt_59(DisasContext *ctx, arg_decode23 *a, uint32_t insn)
{
    a->ldd = extract32(insn, 26, 2);
    a->lds = extract32(insn, 24, 2);
    a->rs = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
    a->sz = 2;
}

static void decode_extract_decode_Fmt_60(DisasContext *ctx, arg_decode24 *a, uint32_t insn)
{
    a->ad = extract32(insn, 18, 1);
    a->sz = extract32(insn, 16, 2);
    a->rd = extract32(insn, 12, 4);
    a->rs = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_61(DisasContext *ctx, arg_decode19 *a, uint32_t insn)
{
    a->sz = extract32(insn, 27, 1);
    a->rs = extract32(insn, 20, 3);
    a->rd = extract32(insn, 16, 3);
    a->dsp = deposit32(extract32(insn, 19, 1), 1, 31, extract32(insn, 23, 4));
}

static void decode_extract_decode_Fmt_62(DisasContext *ctx, arg_decode19 *a, uint32_t insn)
{
    a->sz = extract32(insn, 26, 1);
    a->rs = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
    a->dsp = 0;
}

static void decode_extract_decode_Fmt_63(DisasContext *ctx, arg_decode19 *a, uint32_t insn)
{
    a->sz = extract32(insn, 26, 1);
    a->rs = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
    a->dsp = extract32(insn, 8, 8);
}

static void decode_extract_decode_Fmt_64(DisasContext *ctx, arg_decode19 *a, uint32_t insn)
{
    a->sz = extract32(insn, 26, 1);
    a->rs = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
    a->dsp = deposit32(extract32(insn, 8, 8), 8, 24, sextract32(insn, 0, 8));
}

static void decode_extract_decode_Fmt_65(DisasContext *ctx, arg_decode25 *a, uint32_t insn)
{
    a->sz = extract32(insn, 26, 1);
    a->rs = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
}

static void decode_extract_decode_Fmt_66(DisasContext *ctx, arg_decode21 *a, uint32_t insn)
{
    a->sz = extract32(insn, 20, 1);
    a->ri = extract32(insn, 16, 4);
    a->rb = extract32(insn, 12, 4);
    a->rd = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_67(DisasContext *ctx, arg_decode24 *a, uint32_t insn)
{
    a->ad = extract32(insn, 18, 1);
    a->sz = extract32(insn, 16, 1);
    a->rd = extract32(insn, 12, 4);
    a->rs = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_68(DisasContext *ctx, arg_decode26 *a, uint32_t insn)
{
    a->cr = extract32(insn, 12, 4);
    a->rd = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_69(DisasContext *ctx, arg_jreg *a, uint32_t insn)
{
    a->rs = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_70(DisasContext *ctx, arg_decode27 *a, uint32_t insn)
{
    a->cr = extract32(insn, 8, 4);
    a->imm = li(ctx, extract32(insn, 18, 2));
}

static void decode_extract_decode_Fmt_71(DisasContext *ctx, arg_decode28 *a, uint32_t insn)
{
    a->rs = extract32(insn, 12, 4);
    a->cr = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_72(DisasContext *ctx, arg_decode17 *a, uint32_t insn)
{
    a->imm = extract32(insn, 8, 4);
}

static void decode_extract_decode_Fmt_73(DisasContext *ctx, arg_decode29 *a, uint32_t insn)
{
    a->cr = extract32(insn, 16, 4);
}

static void decode_extract_decode_Fmt_74(DisasContext *ctx, arg_decode30 *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 4);
    a->rd2 = extract32(insn, 16, 4);
}

static void decode_extract_decode_Fmt_75(DisasContext *ctx, arg_decode31 *a, uint32_t insn)
{
    a->sz = extract32(insn, 20, 2);
    a->rs = extract32(insn, 16, 4);
}

static void decode_extract_decode_Fmt_76(DisasContext *ctx, arg_decode32 *a, uint32_t insn)
{
    a->ld = extract32(insn, 24, 2);
    a->rs = extract32(insn, 20, 4);
    a->sz = extract32(insn, 16, 2);
}

static void decode_extract_decode_Fmt_77(DisasContext *ctx, arg_decode18 *a, uint32_t insn)
{
    a->rs = extract32(insn, 20, 4);
    a->rs2 = extract32(insn, 16, 4);
}

static void decode_extract_decode_Fmt_78(DisasContext *ctx, arg_decode17 *a, uint32_t insn)
{
    a->imm = extract32(insn, 12, 1);
}

static void decode_extract_decode_Fmt_79(DisasContext *ctx, arg_decode15 *a, uint32_t insn)
{
}

static void decode_extract_decode_Fmt_80(DisasContext *ctx, arg_decode33 *a, uint32_t insn)
{
    a->sz = extract32(insn, 16, 2);
}

static void decode_extract_decode_Fmt_81(DisasContext *ctx, arg_decode17 *a, uint32_t insn)
{
    a->imm = extract32(insn, 16, 8);
}

static void decode_extract_decode_Fmt_82(DisasContext *ctx, arg_decode34 *a, uint32_t insn)
{
    a->rd = extract32(insn, 20, 4);
    a->rd2 = extract32(insn, 16, 4);
    a->imm = extract32(insn, 8, 8);
}

static bool decode(DisasContext *ctx, uint32_t insn)
{
    union {
        arg_bcnd f_bcnd;
        arg_decode11 f_decode11;
        arg_decode12 f_decode12;
        arg_decode13 f_decode13;
        arg_decode14 f_decode14;
        arg_decode15 f_decode15;
        arg_decode16 f_decode16;
        arg_decode17 f_decode17;
        arg_decode18 f_decode18;
        arg_decode19 f_decode19;
        arg_decode20 f_decode20;
        arg_decode21 f_decode21;
        arg_decode22 f_decode22;
        arg_decode23 f_decode23;
        arg_decode24 f_decode24;
        arg_decode25 f_decode25;
        arg_decode26 f_decode26;
        arg_decode27 f_decode27;
        arg_decode28 f_decode28;
        arg_decode29 f_decode29;
        arg_decode30 f_decode30;
        arg_decode31 f_decode31;
        arg_decode32 f_decode32;
        arg_decode33 f_decode33;
        arg_decode34 f_decode34;
        arg_jdsp f_jdsp;
        arg_jreg f_jreg;
        arg_mcnd f_mcnd;
        arg_mi f_mi;
        arg_mr f_mr;
        arg_ri f_ri;
        arg_rm f_rm;
        arg_rr f_rr;
        arg_rri f_rri;
        arg_rrr f_rrr;
    } u;

    switch ((insn >> 28) & 0xf) {
    case 0x0:
        /* 0000.... ........ ........ ........ */
        switch ((insn >> 27) & 0x1) {
        case 0x0:
            /* 00000... ........ ........ ........ */
            switch ((insn >> 24) & 0x7) {
            case 0x0:
                /* 00000000 ........ ........ ........ */
                /* ../target/rx/insns.decode:176 */
                decode_extract_decode_Fmt_32(ctx, &u.f_decode15, insn);
                if (trans_BRK(ctx, &u.f_decode15)) return true;
                break;
            case 0x2:
                /* 00000010 ........ ........ ........ */
                /* ../target/rx/insns.decode:514 */
                decode_extract_decode_Fmt_32(ctx, &u.f_decode15, insn);
                if (trans_RTS(ctx, &u.f_decode15)) return true;
                break;
            case 0x3:
                /* 00000011 ........ ........ ........ */
                /* ../target/rx/insns.decode:439 */
                decode_extract_decode_Fmt_32(ctx, &u.f_decode15, insn);
                if (trans_NOP(ctx, &u.f_decode15)) return true;
                break;
            case 0x4:
                /* 00000100 ........ ........ ........ */
                /* ../target/rx/insns.decode:172 */
                decode_extract_b4_bra_a(ctx, &u.f_jdsp, insn);
                if (trans_BRA(ctx, &u.f_jdsp)) return true;
                break;
            case 0x5:
                /* 00000101 ........ ........ ........ */
                /* ../target/rx/insns.decode:192 */
                decode_extract_b4_bra_a(ctx, &u.f_jdsp, insn);
                if (trans_BSR(ctx, &u.f_jdsp)) return true;
                break;
            case 0x6:
                /* 00000110 ........ ........ ........ */
                switch ((insn >> 18) & 0xf) {
                case 0x0:
                    /* 00000110 ..0000.. ........ ........ */
                    /* ../target/rx/insns.decode:578 */
                    decode_extract_b3_rd_ld(ctx, &u.f_rm, insn);
                    if (trans_SUB_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x1:
                    /* 00000110 ..0001.. ........ ........ */
                    /* ../target/rx/insns.decode:220 */
                    decode_extract_b3_rd_ld(ctx, &u.f_rm, insn);
                    if (trans_CMP_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x2:
                    /* 00000110 ..0010.. ........ ........ */
                    /* ../target/rx/insns.decode:107 */
                    decode_extract_b3_rd_ld(ctx, &u.f_rm, insn);
                    if (trans_ADD_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x3:
                    /* 00000110 ..0011.. ........ ........ */
                    /* ../target/rx/insns.decode:404 */
                    decode_extract_b3_rd_ld(ctx, &u.f_rm, insn);
                    if (trans_MUL_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x4:
                    /* 00000110 ..0100.. ........ ........ */
                    /* ../target/rx/insns.decode:119 */
                    decode_extract_b3_rd_ld(ctx, &u.f_rm, insn);
                    if (trans_AND_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x5:
                    /* 00000110 ..0101.. ........ ........ */
                    /* ../target/rx/insns.decode:454 */
                    decode_extract_b3_rd_ld(ctx, &u.f_rm, insn);
                    if (trans_OR_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x8:
                    /* 00000110 ..1000.. ........ ........ */
                    decode_extract_b4_rd_ldmi(ctx, &u.f_rm, insn);
                    switch ((insn >> 8) & 0xff) {
                    case 0x0:
                        /* 00000110 ..1000.. 00000000 ........ */
                        /* ../target/rx/insns.decode:530 */
                        if (trans_SBB_mr(ctx, &u.f_rm)) return true;
                        break;
                    case 0x2:
                        /* 00000110 ..1000.. 00000010 ........ */
                        /* ../target/rx/insns.decode:97 */
                        if (trans_ADC_mr(ctx, &u.f_rm)) return true;
                        break;
                    case 0x4:
                        /* 00000110 ..1000.. 00000100 ........ */
                        /* ../target/rx/insns.decode:313 */
                        if (trans_MAX_mr(ctx, &u.f_rm)) return true;
                        break;
                    case 0x5:
                        /* 00000110 ..1000.. 00000101 ........ */
                        /* ../target/rx/insns.decode:321 */
                        if (trans_MIN_mr(ctx, &u.f_rm)) return true;
                        break;
                    case 0x6:
                        /* 00000110 ..1000.. 00000110 ........ */
                        /* ../target/rx/insns.decode:244 */
                        if (trans_EMUL_mr(ctx, &u.f_rm)) return true;
                        break;
                    case 0x7:
                        /* 00000110 ..1000.. 00000111 ........ */
                        /* ../target/rx/insns.decode:252 */
                        if (trans_EMULU_mr(ctx, &u.f_rm)) return true;
                        break;
                    case 0x8:
                        /* 00000110 ..1000.. 00001000 ........ */
                        /* ../target/rx/insns.decode:228 */
                        if (trans_DIV_mr(ctx, &u.f_rm)) return true;
                        break;
                    case 0x9:
                        /* 00000110 ..1000.. 00001001 ........ */
                        /* ../target/rx/insns.decode:236 */
                        if (trans_DIVU_mr(ctx, &u.f_rm)) return true;
                        break;
                    case 0xc:
                        /* 00000110 ..1000.. 00001100 ........ */
                        /* ../target/rx/insns.decode:602 */
                        if (trans_TST_mr(ctx, &u.f_rm)) return true;
                        break;
                    case 0xd:
                        /* 00000110 ..1000.. 00001101 ........ */
                        /* ../target/rx/insns.decode:621 */
                        if (trans_XOR_mr(ctx, &u.f_rm)) return true;
                        break;
                    case 0x10:
                        /* 00000110 ..1000.. 00010000 ........ */
                        /* ../target/rx/insns.decode:613 */
                        if (trans_XCHG_mr(ctx, &u.f_rm)) return true;
                        break;
                    case 0x11:
                        /* 00000110 ..1000.. 00010001 ........ */
                        /* ../target/rx/insns.decode:295 */
                        if (trans_ITOF(ctx, &u.f_rm)) return true;
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        case 0x1:
            /* 00001... ........ ........ ........ */
            /* ../target/rx/insns.decode:168 */
            decode_extract_b1_bra_s(ctx, &u.f_jdsp, insn);
            if (trans_BRA(ctx, &u.f_jdsp)) return true;
            break;
        }
        break;
    case 0x1:
        /* 0001.... ........ ........ ........ */
        /* ../target/rx/insns.decode:135 */
        decode_extract_b1_bcnd_s(ctx, &u.f_bcnd, insn);
        if (trans_BCnd(ctx, &u.f_bcnd)) return true;
        break;
    case 0x2:
        /* 0010.... ........ ........ ........ */
        if ((insn & 0x0f000000) == 0x0e000000) {
            /* 00101110 ........ ........ ........ */
            /* ../target/rx/insns.decode:139 */
            decode_extract_b2_bra_b(ctx, &u.f_jdsp, insn);
            if (trans_BRA(ctx, &u.f_jdsp)) return true;
        }
        /* ../target/rx/insns.decode:140 */
        decode_extract_b2_bcnd_b(ctx, &u.f_bcnd, insn);
        if (trans_BCnd(ctx, &u.f_bcnd)) return true;
        break;
    case 0x3:
        /* 0011.... ........ ........ ........ */
        switch ((insn >> 25) & 0x7) {
        case 0x4:
            /* 0011100. ........ ........ ........ */
            decode_extract_b3_bra_w(ctx, &u.f_jdsp, insn);
            switch ((insn >> 24) & 0x1) {
            case 0x0:
                /* 00111000 ........ ........ ........ */
                /* ../target/rx/insns.decode:170 */
                if (trans_BRA(ctx, &u.f_jdsp)) return true;
                break;
            case 0x1:
                /* 00111001 ........ ........ ........ */
                /* ../target/rx/insns.decode:190 */
                if (trans_BSR(ctx, &u.f_jdsp)) return true;
                break;
            }
            break;
        case 0x5:
            /* 0011101. ........ ........ ........ */
            /* ../target/rx/insns.decode:144 */
            decode_extract_b3_bcnd_w(ctx, &u.f_bcnd, insn);
            if (trans_BCnd(ctx, &u.f_bcnd)) return true;
            break;
        case 0x6:
            /* 0011110. ........ ........ ........ */
            switch ((insn >> 24) & 0x1) {
            case 0x0:
                /* 00111100 ........ ........ ........ */
                /* ../target/rx/insns.decode:338 */
                decode_extract_decode_Fmt_47(ctx, &u.f_decode20, insn);
                if (trans_MOV_im(ctx, &u.f_decode20)) return true;
                break;
            case 0x1:
                /* 00111101 ........ ........ ........ */
                /* ../target/rx/insns.decode:340 */
                decode_extract_decode_Fmt_48(ctx, &u.f_decode20, insn);
                if (trans_MOV_im(ctx, &u.f_decode20)) return true;
                break;
            }
            break;
        case 0x7:
            /* 0011111. ........ ........ ........ */
            switch ((insn >> 24) & 0x1) {
            case 0x0:
                /* 00111110 ........ ........ ........ */
                /* ../target/rx/insns.decode:342 */
                decode_extract_decode_Fmt_49(ctx, &u.f_decode20, insn);
                if (trans_MOV_im(ctx, &u.f_decode20)) return true;
                break;
            case 0x1:
                /* 00111111 ........ ........ ........ */
                /* ../target/rx/insns.decode:519 */
                decode_extract_decode_Fmt_82(ctx, &u.f_decode34, insn);
                if (trans_RTSD_irr(ctx, &u.f_decode34)) return true;
                break;
            }
            break;
        }
        break;
    case 0x4:
        /* 0100.... ........ ........ ........ */
        decode_extract_b2_rd_ld_ub(ctx, &u.f_rm, insn);
        switch ((insn >> 26) & 0x3) {
        case 0x0:
            /* 010000.. ........ ........ ........ */
            /* ../target/rx/insns.decode:576 */
            if (trans_SUB_mr(ctx, &u.f_rm)) return true;
            break;
        case 0x1:
            /* 010001.. ........ ........ ........ */
            /* ../target/rx/insns.decode:218 */
            if (trans_CMP_mr(ctx, &u.f_rm)) return true;
            break;
        case 0x2:
            /* 010010.. ........ ........ ........ */
            /* ../target/rx/insns.decode:105 */
            if (trans_ADD_mr(ctx, &u.f_rm)) return true;
            break;
        case 0x3:
            /* 010011.. ........ ........ ........ */
            /* ../target/rx/insns.decode:402 */
            if (trans_MUL_mr(ctx, &u.f_rm)) return true;
            break;
        }
        break;
    case 0x5:
        /* 0101.... ........ ........ ........ */
        switch ((insn >> 27) & 0x1) {
        case 0x0:
            /* 01010... ........ ........ ........ */
            decode_extract_b2_rd_ld_ub(ctx, &u.f_rm, insn);
            switch ((insn >> 26) & 0x1) {
            case 0x0:
                /* 010100.. ........ ........ ........ */
                /* ../target/rx/insns.decode:117 */
                if (trans_AND_mr(ctx, &u.f_rm)) return true;
                break;
            case 0x1:
                /* 010101.. ........ ........ ........ */
                /* ../target/rx/insns.decode:452 */
                if (trans_OR_mr(ctx, &u.f_rm)) return true;
                break;
            }
            break;
        case 0x1:
            /* 01011... ........ ........ ........ */
            switch ((insn >> 24) & 0x3) {
            case 0x0:
                /* 01011.00 ........ ........ ........ */
                /* ../target/rx/insns.decode:384 */
                decode_extract_decode_Fmt_62(ctx, &u.f_decode19, insn);
                if (trans_MOVU_mr(ctx, &u.f_decode19)) return true;
                break;
            case 0x1:
                /* 01011.01 ........ ........ ........ */
                /* ../target/rx/insns.decode:386 */
                decode_extract_decode_Fmt_63(ctx, &u.f_decode19, insn);
                if (trans_MOVU_mr(ctx, &u.f_decode19)) return true;
                break;
            case 0x2:
                /* 01011.10 ........ ........ ........ */
                /* ../target/rx/insns.decode:388 */
                decode_extract_decode_Fmt_64(ctx, &u.f_decode19, insn);
                if (trans_MOVU_mr(ctx, &u.f_decode19)) return true;
                break;
            case 0x3:
                /* 01011.11 ........ ........ ........ */
                /* ../target/rx/insns.decode:390 */
                decode_extract_decode_Fmt_65(ctx, &u.f_decode25, insn);
                if (trans_MOVU_rr(ctx, &u.f_decode25)) return true;
                break;
            }
            break;
        }
        break;
    case 0x6:
        /* 0110.... ........ ........ ........ */
        switch ((insn >> 25) & 0x7) {
        case 0x0:
            /* 0110000. ........ ........ ........ */
            switch ((insn >> 24) & 0x1) {
            case 0x0:
                /* 01100000 ........ ........ ........ */
                /* ../target/rx/insns.decode:573 */
                decode_extract_b2_rds_uimm4(ctx, &u.f_rri, insn);
                if (trans_SUB_ir(ctx, &u.f_rri)) return true;
                break;
            case 0x1:
                /* 01100001 ........ ........ ........ */
                /* ../target/rx/insns.decode:211 */
                decode_extract_b2_rs2_uimm4(ctx, &u.f_rri, insn);
                if (trans_CMP_ir(ctx, &u.f_rri)) return true;
                break;
            }
            break;
        case 0x1:
            /* 0110001. ........ ........ ........ */
            decode_extract_b2_rds_uimm4(ctx, &u.f_rri, insn);
            switch ((insn >> 24) & 0x1) {
            case 0x0:
                /* 01100010 ........ ........ ........ */
                /* ../target/rx/insns.decode:100 */
                if (trans_ADD_irr(ctx, &u.f_rri)) return true;
                break;
            case 0x1:
                /* 01100011 ........ ........ ........ */
                /* ../target/rx/insns.decode:397 */
                if (trans_MUL_ir(ctx, &u.f_rri)) return true;
                break;
            }
            break;
        case 0x2:
            /* 0110010. ........ ........ ........ */
            decode_extract_b2_rds_uimm4(ctx, &u.f_rri, insn);
            switch ((insn >> 24) & 0x1) {
            case 0x0:
                /* 01100100 ........ ........ ........ */
                /* ../target/rx/insns.decode:112 */
                if (trans_AND_ir(ctx, &u.f_rri)) return true;
                break;
            case 0x1:
                /* 01100101 ........ ........ ........ */
                /* ../target/rx/insns.decode:447 */
                if (trans_OR_ir(ctx, &u.f_rri)) return true;
                break;
            }
            break;
        case 0x3:
            /* 0110011. ........ ........ ........ */
            switch ((insn >> 24) & 0x1) {
            case 0x0:
                /* 01100110 ........ ........ ........ */
                /* ../target/rx/insns.decode:336 */
                decode_extract_decode_Fmt_46(ctx, &u.f_ri, insn);
                if (trans_MOV_ir(ctx, &u.f_ri)) return true;
                break;
            case 0x1:
                /* 01100111 ........ ........ ........ */
                /* ../target/rx/insns.decode:517 */
                decode_extract_decode_Fmt_81(ctx, &u.f_decode17, insn);
                if (trans_RTSD_i(ctx, &u.f_decode17)) return true;
                break;
            }
            break;
        case 0x4:
            /* 0110100. ........ ........ ........ */
            /* ../target/rx/insns.decode:554 */
            decode_extract_b2_rds_imm5(ctx, &u.f_rri, insn);
            if (trans_SHLR_irr(ctx, &u.f_rri)) return true;
            break;
        case 0x5:
            /* 0110101. ........ ........ ........ */
            /* ../target/rx/insns.decode:540 */
            decode_extract_b2_rds_imm5(ctx, &u.f_rri, insn);
            if (trans_SHAR_irr(ctx, &u.f_rri)) return true;
            break;
        case 0x6:
            /* 0110110. ........ ........ ........ */
            /* ../target/rx/insns.decode:547 */
            decode_extract_b2_rds_imm5(ctx, &u.f_rri, insn);
            if (trans_SHLL_irr(ctx, &u.f_rri)) return true;
            break;
        case 0x7:
            /* 0110111. ........ ........ ........ */
            switch ((insn >> 24) & 0x1) {
            case 0x0:
                /* 01101110 ........ ........ ........ */
                /* ../target/rx/insns.decode:474 */
                decode_extract_decode_Fmt_77(ctx, &u.f_decode18, insn);
                if (trans_PUSHM(ctx, &u.f_decode18)) return true;
                break;
            case 0x1:
                /* 01101111 ........ ........ ........ */
                /* ../target/rx/insns.decode:461 */
                decode_extract_decode_Fmt_74(ctx, &u.f_decode30, insn);
                if (trans_POPM(ctx, &u.f_decode30)) return true;
                break;
            }
            break;
        }
        break;
    case 0x7:
        /* 0111.... ........ ........ ........ */
        switch ((insn >> 26) & 0x3) {
        case 0x0:
            /* 011100.. ........ ........ ........ */
            /* ../target/rx/insns.decode:102 */
            decode_extract_b2_rd_rs_li(ctx, &u.f_rri, insn);
            if (trans_ADD_irr(ctx, &u.f_rri)) return true;
            break;
        case 0x1:
            /* 011101.. ........ ........ ........ */
            switch ((insn >> 20) & 0xf) {
            case 0x0:
                /* 011101.. 0000.... ........ ........ */
                /* ../target/rx/insns.decode:215 */
                decode_extract_decode_Fmt_35(ctx, &u.f_rri, insn);
                if (trans_CMP_ir(ctx, &u.f_rri)) return true;
                break;
            case 0x1:
                /* 011101.. 0001.... ........ ........ */
                /* ../target/rx/insns.decode:399 */
                decode_extract_b2_rds_li(ctx, &u.f_rri, insn);
                if (trans_MUL_ir(ctx, &u.f_rri)) return true;
                break;
            case 0x2:
                /* 011101.. 0010.... ........ ........ */
                /* ../target/rx/insns.decode:114 */
                decode_extract_b2_rds_li(ctx, &u.f_rri, insn);
                if (trans_AND_ir(ctx, &u.f_rri)) return true;
                break;
            case 0x3:
                /* 011101.. 0011.... ........ ........ */
                /* ../target/rx/insns.decode:449 */
                decode_extract_b2_rds_li(ctx, &u.f_rri, insn);
                if (trans_OR_ir(ctx, &u.f_rri)) return true;
                break;
            case 0x4:
                /* 011101.. 0100.... ........ ........ */
                decode_extract_decode_Fmt_50(ctx, &u.f_ri, insn);
                switch ((insn >> 24) & 0x3) {
                case 0x1:
                    /* 01110101 0100.... ........ ........ */
                    /* ../target/rx/insns.decode:344 */
                    if (trans_MOV_ir(ctx, &u.f_ri)) return true;
                    break;
                }
                break;
            case 0x5:
                /* 011101.. 0101.... ........ ........ */
                decode_extract_decode_Fmt_34(ctx, &u.f_rri, insn);
                switch ((insn >> 24) & 0x3) {
                case 0x1:
                    /* 01110101 0101.... ........ ........ */
                    /* ../target/rx/insns.decode:213 */
                    if (trans_CMP_ir(ctx, &u.f_rri)) return true;
                    break;
                }
                break;
            case 0x6:
                /* 011101.. 0110.... ........ ........ */
                decode_extract_decode_Fmt_37(ctx, &u.f_decode17, insn);
                switch (insn & 0x030f0000) {
                case 0x01000000:
                    /* 01110101 01100000 ........ ........ */
                    /* ../target/rx/insns.decode:289 */
                    if (trans_INT(ctx, &u.f_decode17)) return true;
                    break;
                }
                break;
            case 0x7:
                /* 011101.. 0111.... ........ ........ */
                decode_extract_decode_Fmt_72(ctx, &u.f_decode17, insn);
                switch (insn & 0x030ff000) {
                case 0x01000000:
                    /* 01110101 01110000 0000.... ........ */
                    /* ../target/rx/insns.decode:432 */
                    if (trans_MVTIPL(ctx, &u.f_decode17)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x2:
            /* 011110.. ........ ........ ........ */
            decode_extract_b2_rds_imm5(ctx, &u.f_rri, insn);
            switch ((insn >> 25) & 0x1) {
            case 0x0:
                /* 0111100. ........ ........ ........ */
                /* ../target/rx/insns.decode:181 */
                if (trans_BSET_ir(ctx, &u.f_rri)) return true;
                break;
            case 0x1:
                /* 0111101. ........ ........ ........ */
                /* ../target/rx/insns.decode:126 */
                if (trans_BCLR_ir(ctx, &u.f_rri)) return true;
                break;
            }
            break;
        case 0x3:
            /* 011111.. ........ ........ ........ */
            switch ((insn >> 25) & 0x1) {
            case 0x0:
                /* 0111110. ........ ........ ........ */
                /* ../target/rx/insns.decode:199 */
                decode_extract_b2_rds_imm5(ctx, &u.f_rri, insn);
                if (trans_BTST_ir(ctx, &u.f_rri)) return true;
                break;
            case 0x1:
                /* 0111111. ........ ........ ........ */
                switch ((insn >> 22) & 0x7) {
                case 0x0:
                    /* 01111110 00...... ........ ........ */
                    decode_extract_b2_rds(ctx, &u.f_rr, insn);
                    switch ((insn >> 20) & 0x3) {
                    case 0x0:
                        /* 01111110 0000.... ........ ........ */
                        /* ../target/rx/insns.decode:442 */
                        if (trans_NOT_rr(ctx, &u.f_rr)) return true;
                        break;
                    case 0x1:
                        /* 01111110 0001.... ........ ........ */
                        /* ../target/rx/insns.decode:435 */
                        if (trans_NEG_rr(ctx, &u.f_rr)) return true;
                        break;
                    case 0x2:
                        /* 01111110 0010.... ........ ........ */
                        /* ../target/rx/insns.decode:87 */
                        if (trans_ABS_rr(ctx, &u.f_rr)) return true;
                        break;
                    case 0x3:
                        /* 01111110 0011.... ........ ........ */
                        /* ../target/rx/insns.decode:522 */
                        if (trans_SAT(ctx, &u.f_rr)) return true;
                        break;
                    }
                    break;
                case 0x1:
                    /* 01111110 01...... ........ ........ */
                    decode_extract_b2_rds(ctx, &u.f_rr, insn);
                    switch ((insn >> 20) & 0x3) {
                    case 0x0:
                        /* 01111110 0100.... ........ ........ */
                        /* ../target/rx/insns.decode:494 */
                        if (trans_RORC(ctx, &u.f_rr)) return true;
                        break;
                    case 0x1:
                        /* 01111110 0101.... ........ ........ */
                        /* ../target/rx/insns.decode:492 */
                        if (trans_ROLC(ctx, &u.f_rr)) return true;
                        break;
                    }
                    break;
                case 0x2:
                    /* 01111110 10...... ........ ........ */
                    if ((insn & 0x00300000) == 0x00300000) {
                        /* 01111110 1011.... ........ ........ */
                        /* ../target/rx/insns.decode:466 */
                        decode_extract_decode_Fmt_31(ctx, &u.f_decode14, insn);
                        if (trans_POP(ctx, &u.f_decode14)) return true;
                    }
                    /* ../target/rx/insns.decode:467 */
                    decode_extract_decode_Fmt_75(ctx, &u.f_decode31, insn);
                    if (trans_PUSH_r(ctx, &u.f_decode31)) return true;
                    break;
                case 0x3:
                    /* 01111110 11...... ........ ........ */
                    decode_extract_decode_Fmt_73(ctx, &u.f_decode29, insn);
                    switch ((insn >> 20) & 0x3) {
                    case 0x0:
                        /* 01111110 1100.... ........ ........ */
                        /* ../target/rx/insns.decode:472 */
                        if (trans_PUSHC(ctx, &u.f_decode29)) return true;
                        break;
                    case 0x2:
                        /* 01111110 1110.... ........ ........ */
                        /* ../target/rx/insns.decode:459 */
                        if (trans_POPC(ctx, &u.f_decode29)) return true;
                        break;
                    }
                    break;
                case 0x4:
                    /* 01111111 00...... ........ ........ */
                    decode_extract_decode_Fmt_38(ctx, &u.f_jreg, insn);
                    switch ((insn >> 20) & 0x3) {
                    case 0x0:
                        /* 01111111 0000.... ........ ........ */
                        /* ../target/rx/insns.decode:298 */
                        if (trans_JMP(ctx, &u.f_jreg)) return true;
                        break;
                    case 0x1:
                        /* 01111111 0001.... ........ ........ */
                        /* ../target/rx/insns.decode:300 */
                        if (trans_JSR(ctx, &u.f_jreg)) return true;
                        break;
                    }
                    break;
                case 0x5:
                    /* 01111111 01...... ........ ........ */
                    decode_extract_decode_Fmt_31(ctx, &u.f_decode14, insn);
                    switch ((insn >> 20) & 0x3) {
                    case 0x0:
                        /* 01111111 0100.... ........ ........ */
                        /* ../target/rx/insns.decode:174 */
                        if (trans_BRA_l(ctx, &u.f_decode14)) return true;
                        break;
                    case 0x1:
                        /* 01111111 0101.... ........ ........ */
                        /* ../target/rx/insns.decode:194 */
                        if (trans_BSR_l(ctx, &u.f_decode14)) return true;
                        break;
                    }
                    break;
                case 0x6:
                    /* 01111111 10...... ........ ........ */
                    switch ((insn >> 20) & 0x3) {
                    case 0x0:
                        /* 01111111 1000.... ........ ........ */
                        switch ((insn >> 18) & 0x3) {
                        case 0x0:
                            /* 01111111 100000.. ........ ........ */
                            if ((insn & 0x00030000) == 0x00030000) {
                                /* 01111111 10000011 ........ ........ */
                                /* ../target/rx/insns.decode:585 */
                                decode_extract_decode_Fmt_79(ctx, &u.f_decode15, insn);
                                if (trans_SCMPU(ctx, &u.f_decode15)) return true;
                            }
                            /* ../target/rx/insns.decode:586 */
                            decode_extract_decode_Fmt_80(ctx, &u.f_decode33, insn);
                            if (trans_SUNTIL(ctx, &u.f_decode33)) return true;
                            break;
                        case 0x1:
                            /* 01111111 100001.. ........ ........ */
                            if ((insn & 0x00030000) == 0x00030000) {
                                /* 01111111 10000111 ........ ........ */
                                /* ../target/rx/insns.decode:592 */
                                decode_extract_decode_Fmt_79(ctx, &u.f_decode15, insn);
                                if (trans_SMOVU(ctx, &u.f_decode15)) return true;
                            }
                            /* ../target/rx/insns.decode:593 */
                            decode_extract_decode_Fmt_80(ctx, &u.f_decode33, insn);
                            if (trans_SWHILE(ctx, &u.f_decode33)) return true;
                            break;
                        case 0x2:
                            /* 01111111 100010.. ........ ........ */
                            if ((insn & 0x00030000) == 0x00030000) {
                                /* 01111111 10001011 ........ ........ */
                                /* ../target/rx/insns.decode:563 */
                                decode_extract_decode_Fmt_79(ctx, &u.f_decode15, insn);
                                if (trans_SMOVB(ctx, &u.f_decode15)) return true;
                            }
                            /* ../target/rx/insns.decode:564 */
                            decode_extract_decode_Fmt_80(ctx, &u.f_decode33, insn);
                            if (trans_SSTR(ctx, &u.f_decode33)) return true;
                            break;
                        case 0x3:
                            /* 01111111 100011.. ........ ........ */
                            if ((insn & 0x00030000) == 0x00030000) {
                                /* 01111111 10001111 ........ ........ */
                                /* ../target/rx/insns.decode:487 */
                                decode_extract_decode_Fmt_79(ctx, &u.f_decode15, insn);
                                if (trans_SMOVF(ctx, &u.f_decode15)) return true;
                            }
                            /* ../target/rx/insns.decode:488 */
                            decode_extract_decode_Fmt_80(ctx, &u.f_decode33, insn);
                            if (trans_RMPA(ctx, &u.f_decode33)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 01111111 1001.... ........ ........ */
                        decode_extract_decode_Fmt_79(ctx, &u.f_decode15, insn);
                        switch ((insn >> 16) & 0xf) {
                        case 0x3:
                            /* 01111111 10010011 ........ ........ */
                            /* ../target/rx/insns.decode:524 */
                            if (trans_SATR(ctx, &u.f_decode15)) return true;
                            break;
                        case 0x4:
                            /* 01111111 10010100 ........ ........ */
                            /* ../target/rx/insns.decode:512 */
                            if (trans_RTFI(ctx, &u.f_decode15)) return true;
                            break;
                        case 0x5:
                            /* 01111111 10010101 ........ ........ */
                            /* ../target/rx/insns.decode:510 */
                            if (trans_RTE(ctx, &u.f_decode15)) return true;
                            break;
                        case 0x6:
                            /* 01111111 10010110 ........ ........ */
                            /* ../target/rx/insns.decode:604 */
                            if (trans_WAIT(ctx, &u.f_decode15)) return true;
                            break;
                        }
                        break;
                    case 0x2:
                        /* 01111111 1010.... ........ ........ */
                        /* ../target/rx/insns.decode:537 */
                        decode_extract_decode_Fmt_33(ctx, &u.f_decode16, insn);
                        if (trans_SETPSW(ctx, &u.f_decode16)) return true;
                        break;
                    case 0x3:
                        /* 01111111 1011.... ........ ........ */
                        /* ../target/rx/insns.decode:208 */
                        decode_extract_decode_Fmt_33(ctx, &u.f_decode16, insn);
                        if (trans_CLRPSW(ctx, &u.f_decode16)) return true;
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        }
        break;
    case 0x8:
        /* 1000.... ........ ........ ........ */
        switch ((insn >> 27) & 0x1) {
        case 0x0:
            /* 10000... ........ ........ ........ */
            /* ../target/rx/insns.decode:324 */
            decode_extract_decode_Fmt_40(ctx, &u.f_decode19, insn);
            if (trans_MOV_rm(ctx, &u.f_decode19)) return true;
            break;
        case 0x1:
            /* 10001... ........ ........ ........ */
            /* ../target/rx/insns.decode:330 */
            decode_extract_decode_Fmt_43(ctx, &u.f_decode19, insn);
            if (trans_MOV_mr(ctx, &u.f_decode19)) return true;
            break;
        }
        break;
    case 0x9:
        /* 1001.... ........ ........ ........ */
        switch ((insn >> 27) & 0x1) {
        case 0x0:
            /* 10010... ........ ........ ........ */
            /* ../target/rx/insns.decode:326 */
            decode_extract_decode_Fmt_41(ctx, &u.f_decode19, insn);
            if (trans_MOV_rm(ctx, &u.f_decode19)) return true;
            break;
        case 0x1:
            /* 10011... ........ ........ ........ */
            /* ../target/rx/insns.decode:332 */
            decode_extract_decode_Fmt_44(ctx, &u.f_decode19, insn);
            if (trans_MOV_mr(ctx, &u.f_decode19)) return true;
            break;
        }
        break;
    case 0xa:
        /* 1010.... ........ ........ ........ */
        switch ((insn >> 27) & 0x1) {
        case 0x0:
            /* 10100... ........ ........ ........ */
            /* ../target/rx/insns.decode:328 */
            decode_extract_decode_Fmt_42(ctx, &u.f_decode19, insn);
            if (trans_MOV_rm(ctx, &u.f_decode19)) return true;
            break;
        case 0x1:
            /* 10101... ........ ........ ........ */
            /* ../target/rx/insns.decode:334 */
            decode_extract_decode_Fmt_45(ctx, &u.f_decode19, insn);
            if (trans_MOV_mr(ctx, &u.f_decode19)) return true;
            break;
        }
        break;
    case 0xb:
        /* 1011.... ........ ........ ........ */
        /* ../target/rx/insns.decode:382 */
        decode_extract_decode_Fmt_61(ctx, &u.f_decode19, insn);
        if (trans_MOVU_mr(ctx, &u.f_decode19)) return true;
        break;
    case 0xc:
        /* 1100.... ........ ........ ........ */
        /* ../target/rx/insns.decode:363 */
        decode_extract_decode_Fmt_57(ctx, &u.f_decode23, insn);
        if (trans_MOV_mm(ctx, &u.f_decode23)) return true;
        break;
    case 0xd:
        /* 1101.... ........ ........ ........ */
        /* ../target/rx/insns.decode:368 */
        decode_extract_decode_Fmt_58(ctx, &u.f_decode23, insn);
        if (trans_MOV_mm(ctx, &u.f_decode23)) return true;
        break;
    case 0xe:
        /* 1110.... ........ ........ ........ */
        /* ../target/rx/insns.decode:373 */
        decode_extract_decode_Fmt_59(ctx, &u.f_decode23, insn);
        if (trans_MOV_mm(ctx, &u.f_decode23)) return true;
        break;
    case 0xf:
        /* 1111.... ........ ........ ........ */
        switch ((insn >> 26) & 0x3) {
        case 0x0:
            /* 111100.. ........ ........ ........ */
            decode_extract_b2_ld_imm3(ctx, &u.f_mi, insn);
            switch ((insn >> 19) & 0x1) {
            case 0x0:
                /* 111100.. ....0... ........ ........ */
                /* ../target/rx/insns.decode:179 */
                if (trans_BSET_im(ctx, &u.f_mi)) return true;
                break;
            case 0x1:
                /* 111100.. ....1... ........ ........ */
                /* ../target/rx/insns.decode:124 */
                if (trans_BCLR_im(ctx, &u.f_mi)) return true;
                break;
            }
            break;
        case 0x1:
            /* 111101.. ........ ........ ........ */
            switch ((insn >> 19) & 0x1) {
            case 0x0:
                /* 111101.. ....0... ........ ........ */
                /* ../target/rx/insns.decode:197 */
                decode_extract_b2_ld_imm3(ctx, &u.f_mi, insn);
                if (trans_BTST_im(ctx, &u.f_mi)) return true;
                break;
            case 0x1:
                /* 111101.. ....1... ........ ........ */
                decode_extract_decode_Fmt_76(ctx, &u.f_decode32, insn);
                switch ((insn >> 18) & 0x1) {
                case 0x0:
                    /* 111101.. ....10.. ........ ........ */
                    /* ../target/rx/insns.decode:470 */
                    if (trans_PUSH_m(ctx, &u.f_decode32)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x2:
            /* 111110.. ........ ........ ........ */
            switch ((insn >> 24) & 0x3) {
            case 0x0:
                /* 11111000 ........ ........ ........ */
                /* ../target/rx/insns.decode:348 */
                decode_extract_decode_Fmt_52(ctx, &u.f_decode20, insn);
                if (trans_MOV_im(ctx, &u.f_decode20)) return true;
                break;
            case 0x1:
                /* 11111001 ........ ........ ........ */
                /* ../target/rx/insns.decode:350 */
                decode_extract_decode_Fmt_53(ctx, &u.f_decode20, insn);
                if (trans_MOV_im(ctx, &u.f_decode20)) return true;
                break;
            case 0x2:
                /* 11111010 ........ ........ ........ */
                /* ../target/rx/insns.decode:352 */
                decode_extract_decode_Fmt_54(ctx, &u.f_decode20, insn);
                if (trans_MOV_im(ctx, &u.f_decode20)) return true;
                break;
            case 0x3:
                /* 11111011 ........ ........ ........ */
                decode_extract_decode_Fmt_51(ctx, &u.f_ri, insn);
                switch ((insn >> 16) & 0x3) {
                case 0x2:
                    /* 11111011 ......10 ........ ........ */
                    /* ../target/rx/insns.decode:346 */
                    if (trans_MOV_ir(ctx, &u.f_ri)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x3:
            /* 111111.. ........ ........ ........ */
            switch ((insn >> 22) & 0xf) {
            case 0x0:
                /* 11111100 00...... ........ ........ */
                switch ((insn >> 18) & 0xf) {
                case 0x0:
                    /* 11111100 000000.. ........ ........ */
                    decode_extract_b3_rd_rs(ctx, &u.f_rr, insn);
                    switch ((insn >> 16) & 0x3) {
                    case 0x3:
                        /* 11111100 00000011 ........ ........ */
                        /* ../target/rx/insns.decode:527 */
                        if (trans_SBB_rr(ctx, &u.f_rr)) return true;
                        break;
                    }
                    break;
                case 0x1:
                    /* 11111100 000001.. ........ ........ */
                    decode_extract_b3_rd_rs(ctx, &u.f_rr, insn);
                    switch ((insn >> 16) & 0x3) {
                    case 0x3:
                        /* 11111100 00000111 ........ ........ */
                        /* ../target/rx/insns.decode:437 */
                        if (trans_NEG_rr(ctx, &u.f_rr)) return true;
                        break;
                    }
                    break;
                case 0x2:
                    /* 11111100 000010.. ........ ........ */
                    decode_extract_b3_rd_rs(ctx, &u.f_rr, insn);
                    switch ((insn >> 16) & 0x3) {
                    case 0x3:
                        /* 11111100 00001011 ........ ........ */
                        /* ../target/rx/insns.decode:94 */
                        if (trans_ADC_rr(ctx, &u.f_rr)) return true;
                        break;
                    }
                    break;
                case 0x3:
                    /* 11111100 000011.. ........ ........ */
                    decode_extract_b3_rd_rs(ctx, &u.f_rr, insn);
                    switch ((insn >> 16) & 0x3) {
                    case 0x3:
                        /* 11111100 00001111 ........ ........ */
                        /* ../target/rx/insns.decode:89 */
                        if (trans_ABS_rr(ctx, &u.f_rr)) return true;
                        break;
                    }
                    break;
                case 0x4:
                    /* 11111100 000100.. ........ ........ */
                    /* ../target/rx/insns.decode:311 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_MAX_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x5:
                    /* 11111100 000101.. ........ ........ */
                    /* ../target/rx/insns.decode:319 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_MIN_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x6:
                    /* 11111100 000110.. ........ ........ */
                    /* ../target/rx/insns.decode:242 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_EMUL_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x7:
                    /* 11111100 000111.. ........ ........ */
                    /* ../target/rx/insns.decode:250 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_EMULU_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x8:
                    /* 11111100 001000.. ........ ........ */
                    /* ../target/rx/insns.decode:226 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_DIV_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x9:
                    /* 11111100 001001.. ........ ........ */
                    /* ../target/rx/insns.decode:234 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_DIVU_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0xc:
                    /* 11111100 001100.. ........ ........ */
                    /* ../target/rx/insns.decode:600 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_TST_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0xd:
                    /* 11111100 001101.. ........ ........ */
                    /* ../target/rx/insns.decode:619 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_XOR_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0xe:
                    /* 11111100 001110.. ........ ........ */
                    decode_extract_b3_rd_rs(ctx, &u.f_rr, insn);
                    switch ((insn >> 16) & 0x3) {
                    case 0x3:
                        /* 11111100 00111011 ........ ........ */
                        /* ../target/rx/insns.decode:444 */
                        if (trans_NOT_rr(ctx, &u.f_rr)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x1:
                /* 11111100 01...... ........ ........ */
                switch ((insn >> 18) & 0xf) {
                case 0x0:
                    /* 11111100 010000.. ........ ........ */
                    if ((insn & 0x00030000) == 0x00030000) {
                        /* 11111100 01000011 ........ ........ */
                        /* ../target/rx/insns.decode:609 */
                        decode_extract_b3_rd_rs(ctx, &u.f_rr, insn);
                        if (trans_XCHG_rr(ctx, &u.f_rr)) return true;
                    }
                    /* ../target/rx/insns.decode:610 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_XCHG_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x1:
                    /* 11111100 010001.. ........ ........ */
                    /* ../target/rx/insns.decode:293 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_ITOF(ctx, &u.f_rm)) return true;
                    break;
                case 0x8:
                    /* 11111100 011000.. ........ ........ */
                    if ((insn & 0x00030000) == 0x00030000) {
                        /* 11111100 01100011 ........ ........ */
                        /* ../target/rx/insns.decode:185 */
                        decode_extract_b3_rs_rd(ctx, &u.f_rr, insn);
                        if (trans_BSET_rr(ctx, &u.f_rr)) return true;
                    }
                    /* ../target/rx/insns.decode:186 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_BSET_rm(ctx, &u.f_rm)) return true;
                    break;
                case 0x9:
                    /* 11111100 011001.. ........ ........ */
                    if ((insn & 0x00030000) == 0x00030000) {
                        /* 11111100 01100111 ........ ........ */
                        /* ../target/rx/insns.decode:130 */
                        decode_extract_b3_rs_rd(ctx, &u.f_rr, insn);
                        if (trans_BCLR_rr(ctx, &u.f_rr)) return true;
                    }
                    /* ../target/rx/insns.decode:131 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_BCLR_rm(ctx, &u.f_rm)) return true;
                    break;
                case 0xa:
                    /* 11111100 011010.. ........ ........ */
                    if ((insn & 0x00030000) == 0x00030000) {
                        /* 11111100 01101011 ........ ........ */
                        /* ../target/rx/insns.decode:203 */
                        decode_extract_b3_rs_rd(ctx, &u.f_rr, insn);
                        if (trans_BTST_rr(ctx, &u.f_rr)) return true;
                    }
                    /* ../target/rx/insns.decode:204 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_BTST_rm(ctx, &u.f_rm)) return true;
                    break;
                case 0xb:
                    /* 11111100 011011.. ........ ........ */
                    if ((insn & 0x00030000) == 0x00030000) {
                        /* 11111100 01101111 ........ ........ */
                        /* ../target/rx/insns.decode:163 */
                        decode_extract_b3_rs_rd(ctx, &u.f_rr, insn);
                        if (trans_BNOT_rr(ctx, &u.f_rr)) return true;
                    }
                    /* ../target/rx/insns.decode:164 */
                    decode_extract_b3_rd_ld_ub(ctx, &u.f_rm, insn);
                    if (trans_BNOT_rm(ctx, &u.f_rm)) return true;
                    break;
                }
                break;
            case 0x2:
                /* 11111100 10...... ........ ........ */
                switch ((insn >> 18) & 0xf) {
                case 0x0:
                    /* 11111100 100000.. ........ ........ */
                    /* ../target/rx/insns.decode:282 */
                    decode_extract_b3_rd_ld_ul(ctx, &u.f_rm, insn);
                    if (trans_FSUB_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x1:
                    /* 11111100 100001.. ........ ........ */
                    /* ../target/rx/insns.decode:264 */
                    decode_extract_b3_rd_ld_ul(ctx, &u.f_rm, insn);
                    if (trans_FCMP_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x2:
                    /* 11111100 100010.. ........ ........ */
                    /* ../target/rx/insns.decode:258 */
                    decode_extract_b3_rd_ld_ul(ctx, &u.f_rm, insn);
                    if (trans_FADD_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x3:
                    /* 11111100 100011.. ........ ........ */
                    /* ../target/rx/insns.decode:276 */
                    decode_extract_b3_rd_ld_ul(ctx, &u.f_rm, insn);
                    if (trans_FMUL_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x4:
                    /* 11111100 100100.. ........ ........ */
                    /* ../target/rx/insns.decode:270 */
                    decode_extract_b3_rd_ld_ul(ctx, &u.f_rm, insn);
                    if (trans_FDIV_mr(ctx, &u.f_rm)) return true;
                    break;
                case 0x5:
                    /* 11111100 100101.. ........ ........ */
                    /* ../target/rx/insns.decode:286 */
                    decode_extract_b3_rd_ld_ul(ctx, &u.f_rm, insn);
                    if (trans_FTOI(ctx, &u.f_rm)) return true;
                    break;
                case 0x6:
                    /* 11111100 100110.. ........ ........ */
                    /* ../target/rx/insns.decode:508 */
                    decode_extract_b3_ld_rd_rs(ctx, &u.f_rm, insn);
                    if (trans_ROUND(ctx, &u.f_rm)) return true;
                    break;
                }
                break;
            case 0x3:
                /* 11111100 11...... ........ ........ */
                switch ((insn >> 21) & 0x1) {
                case 0x0:
                    /* 11111100 110..... ........ ........ */
                    decode_extract_b3_sz_ld_rd_cd(ctx, &u.f_mcnd, insn);
                    switch ((insn >> 20) & 0x1) {
                    case 0x1:
                        /* 11111100 1101.... ........ ........ */
                        /* ../target/rx/insns.decode:534 */
                        if (trans_SCCnd(ctx, &u.f_mcnd)) return true;
                        break;
                    }
                    break;
                case 0x1:
                    /* 11111100 111..... ........ ........ */
                    if ((insn & 0x00000f00) == 0x00000f00) {
                        /* 11111100 111..... ....1111 ........ */
                        /* ../target/rx/insns.decode:149 */
                        decode_extract_decode_Fmt_27(ctx, &u.f_decode11, insn);
                        if (trans_BNOT_im(ctx, &u.f_decode11)) return true;
                    }
                    /* ../target/rx/insns.decode:150 */
                    decode_extract_decode_Fmt_28(ctx, &u.f_decode12, insn);
                    if (trans_BMCnd_im(ctx, &u.f_decode12)) return true;
                    break;
                }
                break;
            case 0x4:
                /* 11111101 00...... ........ ........ */
                switch ((insn >> 19) & 0x7) {
                case 0x0:
                    /* 11111101 00000... ........ ........ */
                    decode_extract_decode_Fmt_39(ctx, &u.f_decode18, insn);
                    switch ((insn >> 16) & 0x7) {
                    case 0x0:
                        /* 11111101 00000000 ........ ........ */
                        /* ../target/rx/insns.decode:409 */
                        if (trans_MULHI(ctx, &u.f_decode18)) return true;
                        break;
                    case 0x1:
                        /* 11111101 00000001 ........ ........ */
                        /* ../target/rx/insns.decode:411 */
                        if (trans_MULLO(ctx, &u.f_decode18)) return true;
                        break;
                    case 0x4:
                        /* 11111101 00000100 ........ ........ */
                        /* ../target/rx/insns.decode:303 */
                        if (trans_MACHI(ctx, &u.f_decode18)) return true;
                        break;
                    case 0x5:
                        /* 11111101 00000101 ........ ........ */
                        /* ../target/rx/insns.decode:305 */
                        if (trans_MACLO(ctx, &u.f_decode18)) return true;
                        break;
                    }
                    break;
                case 0x2:
                    /* 11111101 00010... ........ ........ */
                    decode_extract_decode_Fmt_69(ctx, &u.f_jreg, insn);
                    switch ((insn >> 12) & 0x7f) {
                    case 0x70:
                        /* 11111101 00010111 0000.... ........ */
                        /* ../target/rx/insns.decode:422 */
                        if (trans_MVTACHI(ctx, &u.f_jreg)) return true;
                        break;
                    case 0x71:
                        /* 11111101 00010111 0001.... ........ */
                        /* ../target/rx/insns.decode:424 */
                        if (trans_MVTACLO(ctx, &u.f_jreg)) return true;
                        break;
                    }
                    break;
                case 0x3:
                    /* 11111101 00011... ........ ........ */
                    switch ((insn >> 13) & 0x3f) {
                    case 0x0:
                        /* 11111101 00011000 000..... ........ */
                        decode_extract_decode_Fmt_78(ctx, &u.f_decode17, insn);
                        switch ((insn >> 8) & 0xf) {
                        case 0x0:
                            /* 11111101 00011000 000.0000 ........ */
                            /* ../target/rx/insns.decode:477 */
                            if (trans_RACW(ctx, &u.f_decode17)) return true;
                            break;
                        }
                        break;
                    case 0x38:
                        /* 11111101 00011111 000..... ........ */
                        decode_extract_decode_Fmt_36(ctx, &u.f_decode14, insn);
                        switch ((insn >> 12) & 0x1) {
                        case 0x0:
                            /* 11111101 00011111 0000.... ........ */
                            /* ../target/rx/insns.decode:414 */
                            if (trans_MVFACHI(ctx, &u.f_decode14)) return true;
                            break;
                        }
                        break;
                    case 0x39:
                        /* 11111101 00011111 001..... ........ */
                        decode_extract_decode_Fmt_36(ctx, &u.f_decode14, insn);
                        switch ((insn >> 12) & 0x1) {
                        case 0x0:
                            /* 11111101 00011111 0010.... ........ */
                            /* ../target/rx/insns.decode:416 */
                            if (trans_MVFACMI(ctx, &u.f_decode14)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x4:
                    /* 11111101 00100... ........ ........ */
                    /* ../target/rx/insns.decode:376 */
                    decode_extract_decode_Fmt_60(ctx, &u.f_decode24, insn);
                    if (trans_MOV_rp(ctx, &u.f_decode24)) return true;
                    break;
                case 0x5:
                    /* 11111101 00101... ........ ........ */
                    /* ../target/rx/insns.decode:379 */
                    decode_extract_decode_Fmt_60(ctx, &u.f_decode24, insn);
                    if (trans_MOV_pr(ctx, &u.f_decode24)) return true;
                    break;
                case 0x7:
                    /* 11111101 00111... ........ ........ */
                    decode_extract_decode_Fmt_67(ctx, &u.f_decode24, insn);
                    switch ((insn >> 17) & 0x1) {
                    case 0x0:
                        /* 11111101 00111.0. ........ ........ */
                        /* ../target/rx/insns.decode:394 */
                        if (trans_MOVU_pr(ctx, &u.f_decode24)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x5:
                /* 11111101 01...... ........ ........ */
                switch (insn & 0x00320000) {
                case 0x00200000:
                    /* 11111101 0110..0. ........ ........ */
                    switch ((insn >> 18) & 0x3) {
                    case 0x0:
                        /* 11111101 0110000. ........ ........ */
                        decode_extract_b3_rd_rs(ctx, &u.f_rr, insn);
                        switch ((insn >> 16) & 0x1) {
                        case 0x0:
                            /* 11111101 01100000 ........ ........ */
                            /* ../target/rx/insns.decode:558 */
                            if (trans_SHLR_rr(ctx, &u.f_rr)) return true;
                            break;
                        case 0x1:
                            /* 11111101 01100001 ........ ........ */
                            /* ../target/rx/insns.decode:544 */
                            if (trans_SHAR_rr(ctx, &u.f_rr)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 11111101 0110010. ........ ........ */
                        decode_extract_b3_rd_rs(ctx, &u.f_rr, insn);
                        switch ((insn >> 16) & 0x1) {
                        case 0x0:
                            /* 11111101 01100100 ........ ........ */
                            /* ../target/rx/insns.decode:504 */
                            if (trans_ROTR_rr(ctx, &u.f_rr)) return true;
                            break;
                        case 0x1:
                            /* 11111101 01100101 ........ ........ */
                            /* ../target/rx/insns.decode:482 */
                            if (trans_REVW(ctx, &u.f_rr)) return true;
                            break;
                        }
                        break;
                    case 0x2:
                        /* 11111101 0110100. ........ ........ */
                        decode_extract_decode_Fmt_71(ctx, &u.f_decode28, insn);
                        switch ((insn >> 16) & 0x1) {
                        case 0x0:
                            /* 11111101 01101000 ........ ........ */
                            /* ../target/rx/insns.decode:429 */
                            if (trans_MVTC_r(ctx, &u.f_decode28)) return true;
                            break;
                        }
                        break;
                    case 0x3:
                        /* 11111101 0110110. ........ ........ */
                        /* ../target/rx/insns.decode:502 */
                        decode_extract_b3_rds_imm5(ctx, &u.f_rri, insn);
                        if (trans_ROTR_ir(ctx, &u.f_rri)) return true;
                        break;
                    }
                    break;
                case 0x00220000:
                    /* 11111101 0110..1. ........ ........ */
                    switch ((insn >> 18) & 0x3) {
                    case 0x0:
                        /* 11111101 0110001. ........ ........ */
                        decode_extract_b3_rd_rs(ctx, &u.f_rr, insn);
                        switch ((insn >> 16) & 0x1) {
                        case 0x0:
                            /* 11111101 01100010 ........ ........ */
                            /* ../target/rx/insns.decode:551 */
                            if (trans_SHLL_rr(ctx, &u.f_rr)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 11111101 0110011. ........ ........ */
                        decode_extract_b3_rd_rs(ctx, &u.f_rr, insn);
                        switch ((insn >> 16) & 0x1) {
                        case 0x0:
                            /* 11111101 01100110 ........ ........ */
                            /* ../target/rx/insns.decode:499 */
                            if (trans_ROTL_rr(ctx, &u.f_rr)) return true;
                            break;
                        case 0x1:
                            /* 11111101 01100111 ........ ........ */
                            /* ../target/rx/insns.decode:480 */
                            if (trans_REVL(ctx, &u.f_rr)) return true;
                            break;
                        }
                        break;
                    case 0x2:
                        /* 11111101 0110101. ........ ........ */
                        decode_extract_decode_Fmt_68(ctx, &u.f_decode26, insn);
                        switch ((insn >> 16) & 0x1) {
                        case 0x0:
                            /* 11111101 01101010 ........ ........ */
                            /* ../target/rx/insns.decode:419 */
                            if (trans_MVFC(ctx, &u.f_decode26)) return true;
                            break;
                        }
                        break;
                    case 0x3:
                        /* 11111101 0110111. ........ ........ */
                        /* ../target/rx/insns.decode:497 */
                        decode_extract_b3_rds_imm5(ctx, &u.f_rri, insn);
                        if (trans_ROTL_ir(ctx, &u.f_rri)) return true;
                        break;
                    }
                    break;
                case 0x00300000:
                    /* 11111101 0111..0. ........ ........ */
                    decode_extract_b3_rd_li(ctx, &u.f_rri, insn);
                    switch ((insn >> 12) & 0x1f) {
                    case 0x2:
                        /* 11111101 0111..00 0010.... ........ */
                        /* ../target/rx/insns.decode:92 */
                        if (trans_ADC_ir(ctx, &u.f_rri)) return true;
                        break;
                    case 0x4:
                        /* 11111101 0111..00 0100.... ........ */
                        /* ../target/rx/insns.decode:308 */
                        if (trans_MAX_ir(ctx, &u.f_rri)) return true;
                        break;
                    case 0x5:
                        /* 11111101 0111..00 0101.... ........ */
                        /* ../target/rx/insns.decode:316 */
                        if (trans_MIN_ir(ctx, &u.f_rri)) return true;
                        break;
                    case 0x6:
                        /* 11111101 0111..00 0110.... ........ */
                        /* ../target/rx/insns.decode:239 */
                        if (trans_EMUL_ir(ctx, &u.f_rri)) return true;
                        break;
                    case 0x7:
                        /* 11111101 0111..00 0111.... ........ */
                        /* ../target/rx/insns.decode:247 */
                        if (trans_EMULU_ir(ctx, &u.f_rri)) return true;
                        break;
                    case 0x8:
                        /* 11111101 0111..00 1000.... ........ */
                        /* ../target/rx/insns.decode:223 */
                        if (trans_DIV_ir(ctx, &u.f_rri)) return true;
                        break;
                    case 0x9:
                        /* 11111101 0111..00 1001.... ........ */
                        /* ../target/rx/insns.decode:231 */
                        if (trans_DIVU_ir(ctx, &u.f_rri)) return true;
                        break;
                    case 0xc:
                        /* 11111101 0111..00 1100.... ........ */
                        /* ../target/rx/insns.decode:597 */
                        if (trans_TST_ir(ctx, &u.f_rri)) return true;
                        break;
                    case 0xd:
                        /* 11111101 0111..00 1101.... ........ */
                        /* ../target/rx/insns.decode:616 */
                        if (trans_XOR_ir(ctx, &u.f_rri)) return true;
                        break;
                    case 0xe:
                        /* 11111101 0111..00 1110.... ........ */
                        /* ../target/rx/insns.decode:570 */
                        if (trans_STZ(ctx, &u.f_rri)) return true;
                        break;
                    case 0xf:
                        /* 11111101 0111..00 1111.... ........ */
                        /* ../target/rx/insns.decode:568 */
                        if (trans_STNZ(ctx, &u.f_rri)) return true;
                        break;
                    }
                    break;
                case 0x00320000:
                    /* 11111101 0111..1. ........ ........ */
                    switch ((insn >> 12) & 0x1f) {
                    case 0x0:
                        /* 11111101 0111..10 0000.... ........ */
                        decode_extract_decode_Fmt_36(ctx, &u.f_decode14, insn);
                        switch ((insn >> 18) & 0x3) {
                        case 0x0:
                            /* 11111101 01110010 0000.... ........ */
                            /* ../target/rx/insns.decode:279 */
                            if (trans_FSUB_ir(ctx, &u.f_decode14)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 11111101 0111..10 0001.... ........ */
                        decode_extract_decode_Fmt_36(ctx, &u.f_decode14, insn);
                        switch ((insn >> 18) & 0x3) {
                        case 0x0:
                            /* 11111101 01110010 0001.... ........ */
                            /* ../target/rx/insns.decode:261 */
                            if (trans_FCMP_ir(ctx, &u.f_decode14)) return true;
                            break;
                        }
                        break;
                    case 0x2:
                        /* 11111101 0111..10 0010.... ........ */
                        decode_extract_decode_Fmt_36(ctx, &u.f_decode14, insn);
                        switch ((insn >> 18) & 0x3) {
                        case 0x0:
                            /* 11111101 01110010 0010.... ........ */
                            /* ../target/rx/insns.decode:255 */
                            if (trans_FADD_ir(ctx, &u.f_decode14)) return true;
                            break;
                        }
                        break;
                    case 0x3:
                        /* 11111101 0111..10 0011.... ........ */
                        decode_extract_decode_Fmt_36(ctx, &u.f_decode14, insn);
                        switch ((insn >> 18) & 0x3) {
                        case 0x0:
                            /* 11111101 01110010 0011.... ........ */
                            /* ../target/rx/insns.decode:273 */
                            if (trans_FMUL_ir(ctx, &u.f_decode14)) return true;
                            break;
                        }
                        break;
                    case 0x4:
                        /* 11111101 0111..10 0100.... ........ */
                        decode_extract_decode_Fmt_36(ctx, &u.f_decode14, insn);
                        switch ((insn >> 18) & 0x3) {
                        case 0x0:
                            /* 11111101 01110010 0100.... ........ */
                            /* ../target/rx/insns.decode:267 */
                            if (trans_FDIV_ir(ctx, &u.f_decode14)) return true;
                            break;
                        }
                        break;
                    case 0x10:
                        /* 11111101 0111..11 0000.... ........ */
                        /* ../target/rx/insns.decode:427 */
                        decode_extract_decode_Fmt_70(ctx, &u.f_decode27, insn);
                        if (trans_MVTC_i(ctx, &u.f_decode27)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x6:
                /* 11111101 10...... ........ ........ */
                decode_extract_b3_rd_rs_imm5(ctx, &u.f_rri, insn);
                switch ((insn >> 21) & 0x1) {
                case 0x0:
                    /* 11111101 100..... ........ ........ */
                    /* ../target/rx/insns.decode:556 */
                    if (trans_SHLR_irr(ctx, &u.f_rri)) return true;
                    break;
                case 0x1:
                    /* 11111101 101..... ........ ........ */
                    /* ../target/rx/insns.decode:542 */
                    if (trans_SHAR_irr(ctx, &u.f_rri)) return true;
                    break;
                }
                break;
            case 0x7:
                /* 11111101 11...... ........ ........ */
                switch ((insn >> 21) & 0x1) {
                case 0x0:
                    /* 11111101 110..... ........ ........ */
                    /* ../target/rx/insns.decode:549 */
                    decode_extract_b3_rd_rs_imm5(ctx, &u.f_rri, insn);
                    if (trans_SHLL_irr(ctx, &u.f_rri)) return true;
                    break;
                case 0x1:
                    /* 11111101 111..... ........ ........ */
                    if ((insn & 0x0000f000) == 0x0000f000) {
                        /* 11111101 111..... 1111.... ........ */
                        /* ../target/rx/insns.decode:156 */
                        decode_extract_decode_Fmt_29(ctx, &u.f_ri, insn);
                        if (trans_BNOT_ir(ctx, &u.f_ri)) return true;
                    }
                    /* ../target/rx/insns.decode:157 */
                    decode_extract_decode_Fmt_30(ctx, &u.f_decode13, insn);
                    if (trans_BMCnd_ir(ctx, &u.f_decode13)) return true;
                    break;
                }
                break;
            case 0x8:
                /* 11111110 00...... ........ ........ */
                /* ../target/rx/insns.decode:357 */
                decode_extract_decode_Fmt_56(ctx, &u.f_decode22, insn);
                if (trans_MOV_ra(ctx, &u.f_decode22)) return true;
                break;
            case 0x9:
                /* 11111110 01...... ........ ........ */
                /* ../target/rx/insns.decode:355 */
                decode_extract_decode_Fmt_55(ctx, &u.f_decode21, insn);
                if (trans_MOV_ar(ctx, &u.f_decode21)) return true;
                break;
            case 0xb:
                /* 11111110 11...... ........ ........ */
                decode_extract_decode_Fmt_66(ctx, &u.f_decode21, insn);
                switch ((insn >> 21) & 0x1) {
                case 0x0:
                    /* 11111110 110..... ........ ........ */
                    /* ../target/rx/insns.decode:392 */
                    if (trans_MOVU_ar(ctx, &u.f_decode21)) return true;
                    break;
                }
                break;
            case 0xc:
                /* 11111111 00...... ........ ........ */
                decode_extract_b3_rd_rs_rs2(ctx, &u.f_rrr, insn);
                switch ((insn >> 20) & 0x3) {
                case 0x0:
                    /* 11111111 0000.... ........ ........ */
                    /* ../target/rx/insns.decode:580 */
                    if (trans_SUB_rrr(ctx, &u.f_rrr)) return true;
                    break;
                case 0x2:
                    /* 11111111 0010.... ........ ........ */
                    /* ../target/rx/insns.decode:109 */
                    if (trans_ADD_rrr(ctx, &u.f_rrr)) return true;
                    break;
                case 0x3:
                    /* 11111111 0011.... ........ ........ */
                    /* ../target/rx/insns.decode:406 */
                    if (trans_MUL_rrr(ctx, &u.f_rrr)) return true;
                    break;
                }
                break;
            case 0xd:
                /* 11111111 01...... ........ ........ */
                decode_extract_b3_rd_rs_rs2(ctx, &u.f_rrr, insn);
                switch ((insn >> 20) & 0x3) {
                case 0x0:
                    /* 11111111 0100.... ........ ........ */
                    /* ../target/rx/insns.decode:121 */
                    if (trans_AND_rrr(ctx, &u.f_rrr)) return true;
                    break;
                case 0x1:
                    /* 11111111 0101.... ........ ........ */
                    /* ../target/rx/insns.decode:456 */
                    if (trans_OR_rrr(ctx, &u.f_rrr)) return true;
                    break;
                }
                break;
            }
            break;
        }
        break;
    }
    return false;
}

static uint32_t decode_load(DisasContext *ctx)
{
    uint32_t insn = 0;

    insn = decode_load_bytes(ctx, insn, 0, 1);
    switch ((insn >> 28) & 0xf) {
    case 0x0:
        /* 0000.... ........ ........ ........ */
        switch ((insn >> 27) & 0x1) {
        case 0x0:
            /* 00000... ........ ........ ........ */
            switch ((insn >> 24) & 0x7) {
            case 0x0:
                /* 00000000 ........ ........ ........ */
                return insn;
            case 0x2:
                /* 00000010 ........ ........ ........ */
                return insn;
            case 0x3:
                /* 00000011 ........ ........ ........ */
                return insn;
            case 0x4:
                /* 00000100 ........ ........ ........ */
                insn = decode_load_bytes(ctx, insn, 1, 4);
                return insn;
            case 0x5:
                /* 00000101 ........ ........ ........ */
                insn = decode_load_bytes(ctx, insn, 1, 4);
                return insn;
            case 0x6:
                /* 00000110 ........ ........ ........ */
                insn = decode_load_bytes(ctx, insn, 1, 3);
                switch ((insn >> 18) & 0xf) {
                case 0x0:
                    /* 00000110 ..0000.. ........ ........ */
                    return insn;
                case 0x1:
                    /* 00000110 ..0001.. ........ ........ */
                    return insn;
                case 0x2:
                    /* 00000110 ..0010.. ........ ........ */
                    return insn;
                case 0x3:
                    /* 00000110 ..0011.. ........ ........ */
                    return insn;
                case 0x4:
                    /* 00000110 ..0100.. ........ ........ */
                    return insn;
                case 0x5:
                    /* 00000110 ..0101.. ........ ........ */
                    return insn;
                case 0x8:
                    /* 00000110 ..1000.. ........ ........ */
                    insn = decode_load_bytes(ctx, insn, 3, 4);
                    return insn;
                }
                return insn;
            }
            return insn;
        case 0x1:
            /* 00001... ........ ........ ........ */
            return insn;
        }
        return insn;
    case 0x1:
        /* 0001.... ........ ........ ........ */
        return insn;
    case 0x2:
        /* 0010.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        return insn;
    case 0x3:
        /* 0011.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 3);
        return insn;
    case 0x4:
        /* 0100.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        return insn;
    case 0x5:
        /* 0101.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        switch ((insn >> 27) & 0x1) {
        case 0x0:
            /* 01010... ........ ........ ........ */
            return insn;
        case 0x1:
            /* 01011... ........ ........ ........ */
            switch ((insn >> 24) & 0x3) {
            case 0x0:
                /* 01011.00 ........ ........ ........ */
                return insn;
            case 0x1:
                /* 01011.01 ........ ........ ........ */
                insn = decode_load_bytes(ctx, insn, 2, 3);
                return insn;
            case 0x2:
                /* 01011.10 ........ ........ ........ */
                insn = decode_load_bytes(ctx, insn, 2, 4);
                return insn;
            case 0x3:
                /* 01011.11 ........ ........ ........ */
                return insn;
            }
            return insn;
        }
        return insn;
    case 0x6:
        /* 0110.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        return insn;
    case 0x7:
        /* 0111.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        switch ((insn >> 26) & 0x3) {
        case 0x0:
            /* 011100.. ........ ........ ........ */
            return insn;
        case 0x1:
            /* 011101.. ........ ........ ........ */
            switch ((insn >> 20) & 0xf) {
            case 0x0:
                /* 011101.. 0000.... ........ ........ */
                return insn;
            case 0x1:
                /* 011101.. 0001.... ........ ........ */
                return insn;
            case 0x2:
                /* 011101.. 0010.... ........ ........ */
                return insn;
            case 0x3:
                /* 011101.. 0011.... ........ ........ */
                return insn;
            case 0x4:
                /* 011101.. 0100.... ........ ........ */
                insn = decode_load_bytes(ctx, insn, 2, 3);
                return insn;
            case 0x5:
                /* 011101.. 0101.... ........ ........ */
                insn = decode_load_bytes(ctx, insn, 2, 3);
                return insn;
            case 0x6:
                /* 011101.. 0110.... ........ ........ */
                insn = decode_load_bytes(ctx, insn, 2, 3);
                return insn;
            case 0x7:
                /* 011101.. 0111.... ........ ........ */
                insn = decode_load_bytes(ctx, insn, 2, 3);
                return insn;
            }
            return insn;
        case 0x2:
            /* 011110.. ........ ........ ........ */
            return insn;
        case 0x3:
            /* 011111.. ........ ........ ........ */
            return insn;
        }
        return insn;
    case 0x8:
        /* 1000.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        return insn;
    case 0x9:
        /* 1001.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        return insn;
    case 0xa:
        /* 1010.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        return insn;
    case 0xb:
        /* 1011.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        return insn;
    case 0xc:
        /* 1100.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        return insn;
    case 0xd:
        /* 1101.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        return insn;
    case 0xe:
        /* 1110.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        return insn;
    case 0xf:
        /* 1111.... ........ ........ ........ */
        insn = decode_load_bytes(ctx, insn, 1, 2);
        switch ((insn >> 26) & 0x3) {
        case 0x0:
            /* 111100.. ........ ........ ........ */
            return insn;
        case 0x1:
            /* 111101.. ........ ........ ........ */
            return insn;
        case 0x2:
            /* 111110.. ........ ........ ........ */
            switch ((insn >> 24) & 0x3) {
            case 0x0:
                /* 11111000 ........ ........ ........ */
                return insn;
            case 0x1:
                /* 11111001 ........ ........ ........ */
                insn = decode_load_bytes(ctx, insn, 2, 3);
                return insn;
            case 0x2:
                /* 11111010 ........ ........ ........ */
                insn = decode_load_bytes(ctx, insn, 2, 4);
                return insn;
            case 0x3:
                /* 11111011 ........ ........ ........ */
                return insn;
            }
            return insn;
        case 0x3:
            /* 111111.. ........ ........ ........ */
            insn = decode_load_bytes(ctx, insn, 2, 3);
            return insn;
        }
        return insn;
    }
    return insn;
}
